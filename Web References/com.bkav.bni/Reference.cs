//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BWM.com.bkav.bni {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AgentWSSoap", Namespace="http://tempuri.org/")]
    public partial class AgentWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetWarningPingNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningPingChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBackupWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessBackupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningBackupNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningBackupChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWarningLogWithErrorContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOnHolidayOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListViolationWarningAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsOverThresholdPercentErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback TickViolatedAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIPAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectViolatedWarningVOOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIDsBWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNumberSendBWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningParentByWarningIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningWorkByWarningIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessContentWithResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessSensorWithResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningSensorIsErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastUpdateSensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessContentSampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPingWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningMPWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningMPChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningMPNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaxLastUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePingOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePingFailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningContentNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningParentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserReceiveWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPacketWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPacketWarningContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParentErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateJustSendWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSuggestWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningContentChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateJustChangeOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaringParentNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaringContentParentNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWhiteTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWarningWithSMSAndBWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalContentBySensorIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLastPingForSensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSensorNotPingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSensorChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwitchDataWarningStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningDataNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningDataChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentPauseTooLongOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePauseStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePauseStateBySMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendInfoByReplySMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLastPingForToolSendWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback WarningDataUpdateLastPingByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WarningDataUpdateLastPingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckToolSendWarningActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckToolActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateWindowWarningBySensorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessUpdateWindowWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateWindowNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateWindowChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriveBySensorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDriveWarningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriveWarningNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDriveWarningChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceWarningNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceWarningChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabaseWarningBySensorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoCheckDbByConfigIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncDatabaseNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncDatabaseChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncFolderWarningBySensorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAnalyzeLogResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncFolderNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSyncFolderChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningDDosBySensorIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningDDosNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningDDosChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningWebAttackBySensorIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningWebAttackNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningWebAttackChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningEventLogBySensorIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningEventLogNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningEventLogChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderWorkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningFolderNeedSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarningFolderChangeStateOKOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWarningLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupAndUserByLogIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AgentWS() {
            this.Url = global::BWM.Properties.Settings.Default.BWM_com_bkav_bni_AgentWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetWarningPingNeedSendCompletedEventHandler GetWarningPingNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningPingChangeStateOKCompletedEventHandler GetWarningPingChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetBackupWorkCompletedEventHandler GetBackupWorkCompleted;
        
        /// <remarks/>
        public event ProcessBackupCompletedEventHandler ProcessBackupCompleted;
        
        /// <remarks/>
        public event GetWarningBackupNeedSendCompletedEventHandler GetWarningBackupNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningBackupChangeStateOKCompletedEventHandler GetWarningBackupChangeStateOKCompleted;
        
        /// <remarks/>
        public event InsertWarningLogWithErrorContentCompletedEventHandler InsertWarningLogWithErrorContentCompleted;
        
        /// <remarks/>
        public event GetListOnHolidayCompletedEventHandler GetListOnHolidayCompleted;
        
        /// <remarks/>
        public event ListViolationWarningAccountsCompletedEventHandler ListViolationWarningAccountsCompleted;
        
        /// <remarks/>
        public event IsOverThresholdPercentErrorCompletedEventHandler IsOverThresholdPercentErrorCompleted;
        
        /// <remarks/>
        public event TickViolatedAccountsCompletedEventHandler TickViolatedAccountsCompleted;
        
        /// <remarks/>
        public event GetIPAccessCompletedEventHandler GetIPAccessCompleted;
        
        /// <remarks/>
        public event GetObjectViolatedWarningVOCompletedEventHandler GetObjectViolatedWarningVOCompleted;
        
        /// <remarks/>
        public event UpdateIDsBWCCompletedEventHandler UpdateIDsBWCCompleted;
        
        /// <remarks/>
        public event UpdateNumberSendBWCCompletedEventHandler UpdateNumberSendBWCCompleted;
        
        /// <remarks/>
        public event GetWarningParentByWarningIdCompletedEventHandler GetWarningParentByWarningIdCompleted;
        
        /// <remarks/>
        public event GetWarningWorkByWarningIdCompletedEventHandler GetWarningWorkByWarningIdCompleted;
        
        /// <remarks/>
        public event ProcessContentWithResultCompletedEventHandler ProcessContentWithResultCompleted;
        
        /// <remarks/>
        public event ProcessSensorWithResultCompletedEventHandler ProcessSensorWithResultCompleted;
        
        /// <remarks/>
        public event GetWarningSensorIsErrorCompletedEventHandler GetWarningSensorIsErrorCompleted;
        
        /// <remarks/>
        public event HelloCompletedEventHandler HelloCompleted;
        
        /// <remarks/>
        public event GetLastUpdateSensorCompletedEventHandler GetLastUpdateSensorCompleted;
        
        /// <remarks/>
        public event ProcessContentCompletedEventHandler ProcessContentCompleted;
        
        /// <remarks/>
        public event ProcessContentSampleCompletedEventHandler ProcessContentSampleCompleted;
        
        /// <remarks/>
        public event GetPingWorkCompletedEventHandler GetPingWorkCompleted;
        
        /// <remarks/>
        public event GetWarningMPWorkCompletedEventHandler GetWarningMPWorkCompleted;
        
        /// <remarks/>
        public event GetWarningMPChangeStateOKCompletedEventHandler GetWarningMPChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetWarningMPNeedSendCompletedEventHandler GetWarningMPNeedSendCompleted;
        
        /// <remarks/>
        public event GetContentWorkCompletedEventHandler GetContentWorkCompleted;
        
        /// <remarks/>
        public event GetMaxLastUpdateCompletedEventHandler GetMaxLastUpdateCompleted;
        
        /// <remarks/>
        public event UpdatePingOKCompletedEventHandler UpdatePingOKCompleted;
        
        /// <remarks/>
        public event UpdatePingFailCompletedEventHandler UpdatePingFailCompleted;
        
        /// <remarks/>
        public event GetWarningNeedSendCompletedEventHandler GetWarningNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningContentNeedSendCompletedEventHandler GetWarningContentNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningParentCompletedEventHandler GetWarningParentCompleted;
        
        /// <remarks/>
        public event GetUserReceiveWarningCompletedEventHandler GetUserReceiveWarningCompleted;
        
        /// <remarks/>
        public event GetPacketWarningCompletedEventHandler GetPacketWarningCompleted;
        
        /// <remarks/>
        public event GetPacketWarningContentCompletedEventHandler GetPacketWarningContentCompleted;
        
        /// <remarks/>
        public event GetParentErrorCompletedEventHandler GetParentErrorCompleted;
        
        /// <remarks/>
        public event UpdateJustSendWarningCompletedEventHandler UpdateJustSendWarningCompleted;
        
        /// <remarks/>
        public event GetAllSuggestWarningCompletedEventHandler GetAllSuggestWarningCompleted;
        
        /// <remarks/>
        public event GetWarningChangeStateOKCompletedEventHandler GetWarningChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetWarningContentChangeStateOKCompletedEventHandler GetWarningContentChangeStateOKCompleted;
        
        /// <remarks/>
        public event UpdateJustChangeOKCompletedEventHandler UpdateJustChangeOKCompleted;
        
        /// <remarks/>
        public event GetWaringParentNeedSendCompletedEventHandler GetWaringParentNeedSendCompleted;
        
        /// <remarks/>
        public event GetWaringContentParentNeedSendCompletedEventHandler GetWaringContentParentNeedSendCompleted;
        
        /// <remarks/>
        public event GetWhiteTimeCompletedEventHandler GetWhiteTimeCompleted;
        
        /// <remarks/>
        public event SendWarningWithSMSAndBWCCompletedEventHandler SendWarningWithSMSAndBWCCompleted;
        
        /// <remarks/>
        public event SendWarningCompletedEventHandler SendWarningCompleted;
        
        /// <remarks/>
        public event GetTotalContentBySensorIDCompletedEventHandler GetTotalContentBySensorIDCompleted;
        
        /// <remarks/>
        public event UpdateLastPingForSensorCompletedEventHandler UpdateLastPingForSensorCompleted;
        
        /// <remarks/>
        public event GetSensorNotPingCompletedEventHandler GetSensorNotPingCompleted;
        
        /// <remarks/>
        public event GetSensorChangeStateOKCompletedEventHandler GetSensorChangeStateOKCompleted;
        
        /// <remarks/>
        public event SwitchDataWarningStatusCompletedEventHandler SwitchDataWarningStatusCompleted;
        
        /// <remarks/>
        public event GetWarningDataNeedSendCompletedEventHandler GetWarningDataNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningDataChangeStateOKCompletedEventHandler GetWarningDataChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetContentPauseTooLongCompletedEventHandler GetContentPauseTooLongCompleted;
        
        /// <remarks/>
        public event UpdatePauseStateCompletedEventHandler UpdatePauseStateCompleted;
        
        /// <remarks/>
        public event UpdatePauseStateBySMSCompletedEventHandler UpdatePauseStateBySMSCompleted;
        
        /// <remarks/>
        public event SendInfoByReplySMSCompletedEventHandler SendInfoByReplySMSCompleted;
        
        /// <remarks/>
        public event UpdateLastPingForToolSendWarningCompletedEventHandler UpdateLastPingForToolSendWarningCompleted;
        
        /// <remarks/>
        public event WarningDataUpdateLastPingByIdCompletedEventHandler WarningDataUpdateLastPingByIdCompleted;
        
        /// <remarks/>
        public event WarningDataUpdateLastPingCompletedEventHandler WarningDataUpdateLastPingCompleted;
        
        /// <remarks/>
        public event CheckToolSendWarningActiveCompletedEventHandler CheckToolSendWarningActiveCompleted;
        
        /// <remarks/>
        public event CheckToolActiveCompletedEventHandler CheckToolActiveCompleted;
        
        /// <remarks/>
        public event GetUpdateWindowWarningBySensorIdCompletedEventHandler GetUpdateWindowWarningBySensorIdCompleted;
        
        /// <remarks/>
        public event ProcessUpdateWindowWarningCompletedEventHandler ProcessUpdateWindowWarningCompleted;
        
        /// <remarks/>
        public event GetUpdateWindowNeedSendCompletedEventHandler GetUpdateWindowNeedSendCompleted;
        
        /// <remarks/>
        public event GetUpdateWindowChangeStateOKCompletedEventHandler GetUpdateWindowChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetDriveBySensorIdCompletedEventHandler GetDriveBySensorIdCompleted;
        
        /// <remarks/>
        public event ProcessDriveWarningCompletedEventHandler ProcessDriveWarningCompleted;
        
        /// <remarks/>
        public event GetDriveWarningNeedSendCompletedEventHandler GetDriveWarningNeedSendCompleted;
        
        /// <remarks/>
        public event GetDriveWarningChangeStateOKCompletedEventHandler GetDriveWarningChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetResourceWorkCompletedEventHandler GetResourceWorkCompleted;
        
        /// <remarks/>
        public event GetResourceWarningNeedSendCompletedEventHandler GetResourceWarningNeedSendCompleted;
        
        /// <remarks/>
        public event GetResourceWarningChangeStateOKCompletedEventHandler GetResourceWarningChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetDatabaseWarningBySensorIdCompletedEventHandler GetDatabaseWarningBySensorIdCompleted;
        
        /// <remarks/>
        public event GetInfoCheckDbByConfigIdCompletedEventHandler GetInfoCheckDbByConfigIdCompleted;
        
        /// <remarks/>
        public event GetSyncDatabaseNeedSendCompletedEventHandler GetSyncDatabaseNeedSendCompleted;
        
        /// <remarks/>
        public event GetSyncDatabaseChangeStateOKCompletedEventHandler GetSyncDatabaseChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetSyncFolderWarningBySensorIdCompletedEventHandler GetSyncFolderWarningBySensorIdCompleted;
        
        /// <remarks/>
        public event UpdateAnalyzeLogResultCompletedEventHandler UpdateAnalyzeLogResultCompleted;
        
        /// <remarks/>
        public event GetSyncFolderNeedSendCompletedEventHandler GetSyncFolderNeedSendCompleted;
        
        /// <remarks/>
        public event GetSyncFolderChangeStateOKCompletedEventHandler GetSyncFolderChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetWarningDDosBySensorIDCompletedEventHandler GetWarningDDosBySensorIDCompleted;
        
        /// <remarks/>
        public event GetWarningDDosNeedSendCompletedEventHandler GetWarningDDosNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningDDosChangeStateOKCompletedEventHandler GetWarningDDosChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetWarningWebAttackBySensorIDCompletedEventHandler GetWarningWebAttackBySensorIDCompleted;
        
        /// <remarks/>
        public event GetWarningWebAttackNeedSendCompletedEventHandler GetWarningWebAttackNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningWebAttackChangeStateOKCompletedEventHandler GetWarningWebAttackChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetWarningEventLogBySensorIDCompletedEventHandler GetWarningEventLogBySensorIDCompleted;
        
        /// <remarks/>
        public event GetWarningEventLogNeedSendCompletedEventHandler GetWarningEventLogNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningEventLogChangeStateOKCompletedEventHandler GetWarningEventLogChangeStateOKCompleted;
        
        /// <remarks/>
        public event GetFolderWorkCompletedEventHandler GetFolderWorkCompleted;
        
        /// <remarks/>
        public event ProcessFolderCompletedEventHandler ProcessFolderCompleted;
        
        /// <remarks/>
        public event GetWarningFolderNeedSendCompletedEventHandler GetWarningFolderNeedSendCompleted;
        
        /// <remarks/>
        public event GetWarningFolderChangeStateOKCompletedEventHandler GetWarningFolderChangeStateOKCompleted;
        
        /// <remarks/>
        public event InsertWarningLogCompletedEventHandler InsertWarningLogCompleted;
        
        /// <remarks/>
        public event GetGroupAndUserByLogIdCompletedEventHandler GetGroupAndUserByLogIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningPingNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningPingNeedSend() {
            object[] results = this.Invoke("GetWarningPingNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningPingNeedSendAsync() {
            this.GetWarningPingNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningPingNeedSendAsync(object userState) {
            if ((this.GetWarningPingNeedSendOperationCompleted == null)) {
                this.GetWarningPingNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningPingNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningPingNeedSend", new object[0], this.GetWarningPingNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningPingNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningPingNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningPingNeedSendCompleted(this, new GetWarningPingNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningPingChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningPingChangeStateOK() {
            object[] results = this.Invoke("GetWarningPingChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningPingChangeStateOKAsync() {
            this.GetWarningPingChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningPingChangeStateOKAsync(object userState) {
            if ((this.GetWarningPingChangeStateOKOperationCompleted == null)) {
                this.GetWarningPingChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningPingChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningPingChangeStateOK", new object[0], this.GetWarningPingChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningPingChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningPingChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningPingChangeStateOKCompleted(this, new GetWarningPingChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBackupWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBackupWork(string sensorId) {
            object[] results = this.Invoke("GetBackupWork", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBackupWorkAsync(string sensorId) {
            this.GetBackupWorkAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetBackupWorkAsync(string sensorId, object userState) {
            if ((this.GetBackupWorkOperationCompleted == null)) {
                this.GetBackupWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBackupWorkOperationCompleted);
            }
            this.InvokeAsync("GetBackupWork", new object[] {
                        sensorId}, this.GetBackupWorkOperationCompleted, userState);
        }
        
        private void OnGetBackupWorkOperationCompleted(object arg) {
            if ((this.GetBackupWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBackupWorkCompleted(this, new GetBackupWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessBackup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessBackup(string json, int getSample) {
            object[] results = this.Invoke("ProcessBackup", new object[] {
                        json,
                        getSample});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessBackupAsync(string json, int getSample) {
            this.ProcessBackupAsync(json, getSample, null);
        }
        
        /// <remarks/>
        public void ProcessBackupAsync(string json, int getSample, object userState) {
            if ((this.ProcessBackupOperationCompleted == null)) {
                this.ProcessBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessBackupOperationCompleted);
            }
            this.InvokeAsync("ProcessBackup", new object[] {
                        json,
                        getSample}, this.ProcessBackupOperationCompleted, userState);
        }
        
        private void OnProcessBackupOperationCompleted(object arg) {
            if ((this.ProcessBackupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessBackupCompleted(this, new ProcessBackupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningBackupNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningBackupNeedSend() {
            object[] results = this.Invoke("GetWarningBackupNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningBackupNeedSendAsync() {
            this.GetWarningBackupNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningBackupNeedSendAsync(object userState) {
            if ((this.GetWarningBackupNeedSendOperationCompleted == null)) {
                this.GetWarningBackupNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningBackupNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningBackupNeedSend", new object[0], this.GetWarningBackupNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningBackupNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningBackupNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningBackupNeedSendCompleted(this, new GetWarningBackupNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningBackupChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningBackupChangeStateOK() {
            object[] results = this.Invoke("GetWarningBackupChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningBackupChangeStateOKAsync() {
            this.GetWarningBackupChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningBackupChangeStateOKAsync(object userState) {
            if ((this.GetWarningBackupChangeStateOKOperationCompleted == null)) {
                this.GetWarningBackupChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningBackupChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningBackupChangeStateOK", new object[0], this.GetWarningBackupChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningBackupChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningBackupChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningBackupChangeStateOKCompleted(this, new GetWarningBackupChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertWarningLogWithErrorContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertWarningLogWithErrorContent(int warningId, int type, string errorContent, string detail) {
            object[] results = this.Invoke("InsertWarningLogWithErrorContent", new object[] {
                        warningId,
                        type,
                        errorContent,
                        detail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWarningLogWithErrorContentAsync(int warningId, int type, string errorContent, string detail) {
            this.InsertWarningLogWithErrorContentAsync(warningId, type, errorContent, detail, null);
        }
        
        /// <remarks/>
        public void InsertWarningLogWithErrorContentAsync(int warningId, int type, string errorContent, string detail, object userState) {
            if ((this.InsertWarningLogWithErrorContentOperationCompleted == null)) {
                this.InsertWarningLogWithErrorContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWarningLogWithErrorContentOperationCompleted);
            }
            this.InvokeAsync("InsertWarningLogWithErrorContent", new object[] {
                        warningId,
                        type,
                        errorContent,
                        detail}, this.InsertWarningLogWithErrorContentOperationCompleted, userState);
        }
        
        private void OnInsertWarningLogWithErrorContentOperationCompleted(object arg) {
            if ((this.InsertWarningLogWithErrorContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWarningLogWithErrorContentCompleted(this, new InsertWarningLogWithErrorContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListOnHoliday", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListOnHoliday(int year) {
            object[] results = this.Invoke("GetListOnHoliday", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListOnHolidayAsync(int year) {
            this.GetListOnHolidayAsync(year, null);
        }
        
        /// <remarks/>
        public void GetListOnHolidayAsync(int year, object userState) {
            if ((this.GetListOnHolidayOperationCompleted == null)) {
                this.GetListOnHolidayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOnHolidayOperationCompleted);
            }
            this.InvokeAsync("GetListOnHoliday", new object[] {
                        year}, this.GetListOnHolidayOperationCompleted, userState);
        }
        
        private void OnGetListOnHolidayOperationCompleted(object arg) {
            if ((this.GetListOnHolidayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListOnHolidayCompleted(this, new GetListOnHolidayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListViolationWarningAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ViolationWarningAccountVO[] ListViolationWarningAccounts(int id) {
            object[] results = this.Invoke("ListViolationWarningAccounts", new object[] {
                        id});
            return ((ViolationWarningAccountVO[])(results[0]));
        }
        
        /// <remarks/>
        public void ListViolationWarningAccountsAsync(int id) {
            this.ListViolationWarningAccountsAsync(id, null);
        }
        
        /// <remarks/>
        public void ListViolationWarningAccountsAsync(int id, object userState) {
            if ((this.ListViolationWarningAccountsOperationCompleted == null)) {
                this.ListViolationWarningAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListViolationWarningAccountsOperationCompleted);
            }
            this.InvokeAsync("ListViolationWarningAccounts", new object[] {
                        id}, this.ListViolationWarningAccountsOperationCompleted, userState);
        }
        
        private void OnListViolationWarningAccountsOperationCompleted(object arg) {
            if ((this.ListViolationWarningAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListViolationWarningAccountsCompleted(this, new ListViolationWarningAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsOverThresholdPercentError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultVO IsOverThresholdPercentError(string sensorID, bool isEcrypt) {
            object[] results = this.Invoke("IsOverThresholdPercentError", new object[] {
                        sensorID,
                        isEcrypt});
            return ((ResultVO)(results[0]));
        }
        
        /// <remarks/>
        public void IsOverThresholdPercentErrorAsync(string sensorID, bool isEcrypt) {
            this.IsOverThresholdPercentErrorAsync(sensorID, isEcrypt, null);
        }
        
        /// <remarks/>
        public void IsOverThresholdPercentErrorAsync(string sensorID, bool isEcrypt, object userState) {
            if ((this.IsOverThresholdPercentErrorOperationCompleted == null)) {
                this.IsOverThresholdPercentErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOverThresholdPercentErrorOperationCompleted);
            }
            this.InvokeAsync("IsOverThresholdPercentError", new object[] {
                        sensorID,
                        isEcrypt}, this.IsOverThresholdPercentErrorOperationCompleted, userState);
        }
        
        private void OnIsOverThresholdPercentErrorOperationCompleted(object arg) {
            if ((this.IsOverThresholdPercentErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOverThresholdPercentErrorCompleted(this, new IsOverThresholdPercentErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TickViolatedAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TickViolatedAccounts(string infoAccounts) {
            object[] results = this.Invoke("TickViolatedAccounts", new object[] {
                        infoAccounts});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TickViolatedAccountsAsync(string infoAccounts) {
            this.TickViolatedAccountsAsync(infoAccounts, null);
        }
        
        /// <remarks/>
        public void TickViolatedAccountsAsync(string infoAccounts, object userState) {
            if ((this.TickViolatedAccountsOperationCompleted == null)) {
                this.TickViolatedAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTickViolatedAccountsOperationCompleted);
            }
            this.InvokeAsync("TickViolatedAccounts", new object[] {
                        infoAccounts}, this.TickViolatedAccountsOperationCompleted, userState);
        }
        
        private void OnTickViolatedAccountsOperationCompleted(object arg) {
            if ((this.TickViolatedAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TickViolatedAccountsCompleted(this, new TickViolatedAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIPAccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIPAccess() {
            object[] results = this.Invoke("GetIPAccess", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIPAccessAsync() {
            this.GetIPAccessAsync(null);
        }
        
        /// <remarks/>
        public void GetIPAccessAsync(object userState) {
            if ((this.GetIPAccessOperationCompleted == null)) {
                this.GetIPAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIPAccessOperationCompleted);
            }
            this.InvokeAsync("GetIPAccess", new object[0], this.GetIPAccessOperationCompleted, userState);
        }
        
        private void OnGetIPAccessOperationCompleted(object arg) {
            if ((this.GetIPAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIPAccessCompleted(this, new GetIPAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObjectViolatedWarningVO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ViolatedWarningVO GetObjectViolatedWarningVO() {
            object[] results = this.Invoke("GetObjectViolatedWarningVO", new object[0]);
            return ((ViolatedWarningVO)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectViolatedWarningVOAsync() {
            this.GetObjectViolatedWarningVOAsync(null);
        }
        
        /// <remarks/>
        public void GetObjectViolatedWarningVOAsync(object userState) {
            if ((this.GetObjectViolatedWarningVOOperationCompleted == null)) {
                this.GetObjectViolatedWarningVOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectViolatedWarningVOOperationCompleted);
            }
            this.InvokeAsync("GetObjectViolatedWarningVO", new object[0], this.GetObjectViolatedWarningVOOperationCompleted, userState);
        }
        
        private void OnGetObjectViolatedWarningVOOperationCompleted(object arg) {
            if ((this.GetObjectViolatedWarningVOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectViolatedWarningVOCompleted(this, new GetObjectViolatedWarningVOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateIDsBWC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateIDsBWC(int warningID, string idsBWC) {
            object[] results = this.Invoke("UpdateIDsBWC", new object[] {
                        warningID,
                        idsBWC});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIDsBWCAsync(int warningID, string idsBWC) {
            this.UpdateIDsBWCAsync(warningID, idsBWC, null);
        }
        
        /// <remarks/>
        public void UpdateIDsBWCAsync(int warningID, string idsBWC, object userState) {
            if ((this.UpdateIDsBWCOperationCompleted == null)) {
                this.UpdateIDsBWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIDsBWCOperationCompleted);
            }
            this.InvokeAsync("UpdateIDsBWC", new object[] {
                        warningID,
                        idsBWC}, this.UpdateIDsBWCOperationCompleted, userState);
        }
        
        private void OnUpdateIDsBWCOperationCompleted(object arg) {
            if ((this.UpdateIDsBWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIDsBWCCompleted(this, new UpdateIDsBWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateNumberSendBWC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateNumberSendBWC(int warningID) {
            object[] results = this.Invoke("UpdateNumberSendBWC", new object[] {
                        warningID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNumberSendBWCAsync(int warningID) {
            this.UpdateNumberSendBWCAsync(warningID, null);
        }
        
        /// <remarks/>
        public void UpdateNumberSendBWCAsync(int warningID, object userState) {
            if ((this.UpdateNumberSendBWCOperationCompleted == null)) {
                this.UpdateNumberSendBWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNumberSendBWCOperationCompleted);
            }
            this.InvokeAsync("UpdateNumberSendBWC", new object[] {
                        warningID}, this.UpdateNumberSendBWCOperationCompleted, userState);
        }
        
        private void OnUpdateNumberSendBWCOperationCompleted(object arg) {
            if ((this.UpdateNumberSendBWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNumberSendBWCCompleted(this, new UpdateNumberSendBWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningParentByWarningId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarningParentByWarningId(string warningId, out System.Data.DataTable dt) {
            object[] results = this.Invoke("GetWarningParentByWarningId", new object[] {
                        warningId});
            dt = ((System.Data.DataTable)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningParentByWarningIdAsync(string warningId) {
            this.GetWarningParentByWarningIdAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetWarningParentByWarningIdAsync(string warningId, object userState) {
            if ((this.GetWarningParentByWarningIdOperationCompleted == null)) {
                this.GetWarningParentByWarningIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningParentByWarningIdOperationCompleted);
            }
            this.InvokeAsync("GetWarningParentByWarningId", new object[] {
                        warningId}, this.GetWarningParentByWarningIdOperationCompleted, userState);
        }
        
        private void OnGetWarningParentByWarningIdOperationCompleted(object arg) {
            if ((this.GetWarningParentByWarningIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningParentByWarningIdCompleted(this, new GetWarningParentByWarningIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningWorkByWarningId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarningWorkByWarningId(string warningId, string warningType, out System.Data.DataTable dt) {
            object[] results = this.Invoke("GetWarningWorkByWarningId", new object[] {
                        warningId,
                        warningType});
            dt = ((System.Data.DataTable)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningWorkByWarningIdAsync(string warningId, string warningType) {
            this.GetWarningWorkByWarningIdAsync(warningId, warningType, null);
        }
        
        /// <remarks/>
        public void GetWarningWorkByWarningIdAsync(string warningId, string warningType, object userState) {
            if ((this.GetWarningWorkByWarningIdOperationCompleted == null)) {
                this.GetWarningWorkByWarningIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningWorkByWarningIdOperationCompleted);
            }
            this.InvokeAsync("GetWarningWorkByWarningId", new object[] {
                        warningId,
                        warningType}, this.GetWarningWorkByWarningIdOperationCompleted, userState);
        }
        
        private void OnGetWarningWorkByWarningIdOperationCompleted(object arg) {
            if ((this.GetWarningWorkByWarningIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningWorkByWarningIdCompleted(this, new GetWarningWorkByWarningIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessContentWithResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessContentWithResult(string jsonContent, out bool isError) {
            object[] results = this.Invoke("ProcessContentWithResult", new object[] {
                        jsonContent});
            isError = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessContentWithResultAsync(string jsonContent) {
            this.ProcessContentWithResultAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void ProcessContentWithResultAsync(string jsonContent, object userState) {
            if ((this.ProcessContentWithResultOperationCompleted == null)) {
                this.ProcessContentWithResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessContentWithResultOperationCompleted);
            }
            this.InvokeAsync("ProcessContentWithResult", new object[] {
                        jsonContent}, this.ProcessContentWithResultOperationCompleted, userState);
        }
        
        private void OnProcessContentWithResultOperationCompleted(object arg) {
            if ((this.ProcessContentWithResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessContentWithResultCompleted(this, new ProcessContentWithResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessSensorWithResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessSensorWithResult(string jsonSensor, out bool isError) {
            object[] results = this.Invoke("ProcessSensorWithResult", new object[] {
                        jsonSensor});
            isError = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessSensorWithResultAsync(string jsonSensor) {
            this.ProcessSensorWithResultAsync(jsonSensor, null);
        }
        
        /// <remarks/>
        public void ProcessSensorWithResultAsync(string jsonSensor, object userState) {
            if ((this.ProcessSensorWithResultOperationCompleted == null)) {
                this.ProcessSensorWithResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessSensorWithResultOperationCompleted);
            }
            this.InvokeAsync("ProcessSensorWithResult", new object[] {
                        jsonSensor}, this.ProcessSensorWithResultOperationCompleted, userState);
        }
        
        private void OnProcessSensorWithResultOperationCompleted(object arg) {
            if ((this.ProcessSensorWithResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessSensorWithResultCompleted(this, new ProcessSensorWithResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningSensorIsError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarningSensorIsError(int warningId, out bool isError) {
            object[] results = this.Invoke("GetWarningSensorIsError", new object[] {
                        warningId});
            isError = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningSensorIsErrorAsync(int warningId) {
            this.GetWarningSensorIsErrorAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetWarningSensorIsErrorAsync(int warningId, object userState) {
            if ((this.GetWarningSensorIsErrorOperationCompleted == null)) {
                this.GetWarningSensorIsErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningSensorIsErrorOperationCompleted);
            }
            this.InvokeAsync("GetWarningSensorIsError", new object[] {
                        warningId}, this.GetWarningSensorIsErrorOperationCompleted, userState);
        }
        
        private void OnGetWarningSensorIsErrorOperationCompleted(object arg) {
            if ((this.GetWarningSensorIsErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningSensorIsErrorCompleted(this, new GetWarningSensorIsErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Hello", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Hello() {
            object[] results = this.Invoke("Hello", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloAsync() {
            this.HelloAsync(null);
        }
        
        /// <remarks/>
        public void HelloAsync(object userState) {
            if ((this.HelloOperationCompleted == null)) {
                this.HelloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloOperationCompleted);
            }
            this.InvokeAsync("Hello", new object[0], this.HelloOperationCompleted, userState);
        }
        
        private void OnHelloOperationCompleted(object arg) {
            if ((this.HelloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloCompleted(this, new HelloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastUpdateSensor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetLastUpdateSensor(int sensorId, System.DateTime lastUpdate) {
            object[] results = this.Invoke("GetLastUpdateSensor", new object[] {
                        sensorId,
                        lastUpdate});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastUpdateSensorAsync(int sensorId, System.DateTime lastUpdate) {
            this.GetLastUpdateSensorAsync(sensorId, lastUpdate, null);
        }
        
        /// <remarks/>
        public void GetLastUpdateSensorAsync(int sensorId, System.DateTime lastUpdate, object userState) {
            if ((this.GetLastUpdateSensorOperationCompleted == null)) {
                this.GetLastUpdateSensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastUpdateSensorOperationCompleted);
            }
            this.InvokeAsync("GetLastUpdateSensor", new object[] {
                        sensorId,
                        lastUpdate}, this.GetLastUpdateSensorOperationCompleted, userState);
        }
        
        private void OnGetLastUpdateSensorOperationCompleted(object arg) {
            if ((this.GetLastUpdateSensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastUpdateSensorCompleted(this, new GetLastUpdateSensorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessContent(string jsonContent) {
            object[] results = this.Invoke("ProcessContent", new object[] {
                        jsonContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessContentAsync(string jsonContent) {
            this.ProcessContentAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void ProcessContentAsync(string jsonContent, object userState) {
            if ((this.ProcessContentOperationCompleted == null)) {
                this.ProcessContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessContentOperationCompleted);
            }
            this.InvokeAsync("ProcessContent", new object[] {
                        jsonContent}, this.ProcessContentOperationCompleted, userState);
        }
        
        private void OnProcessContentOperationCompleted(object arg) {
            if ((this.ProcessContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessContentCompleted(this, new ProcessContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessContentSample", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessContentSample(string jsonContent) {
            object[] results = this.Invoke("ProcessContentSample", new object[] {
                        jsonContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessContentSampleAsync(string jsonContent) {
            this.ProcessContentSampleAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void ProcessContentSampleAsync(string jsonContent, object userState) {
            if ((this.ProcessContentSampleOperationCompleted == null)) {
                this.ProcessContentSampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessContentSampleOperationCompleted);
            }
            this.InvokeAsync("ProcessContentSample", new object[] {
                        jsonContent}, this.ProcessContentSampleOperationCompleted, userState);
        }
        
        private void OnProcessContentSampleOperationCompleted(object arg) {
            if ((this.ProcessContentSampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessContentSampleCompleted(this, new ProcessContentSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPingWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPingWork(string sensorId) {
            object[] results = this.Invoke("GetPingWork", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPingWorkAsync(string sensorId) {
            this.GetPingWorkAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetPingWorkAsync(string sensorId, object userState) {
            if ((this.GetPingWorkOperationCompleted == null)) {
                this.GetPingWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPingWorkOperationCompleted);
            }
            this.InvokeAsync("GetPingWork", new object[] {
                        sensorId}, this.GetPingWorkOperationCompleted, userState);
        }
        
        private void OnGetPingWorkOperationCompleted(object arg) {
            if ((this.GetPingWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPingWorkCompleted(this, new GetPingWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningMPWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningMPWork(string sensorId) {
            object[] results = this.Invoke("GetWarningMPWork", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningMPWorkAsync(string sensorId) {
            this.GetWarningMPWorkAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetWarningMPWorkAsync(string sensorId, object userState) {
            if ((this.GetWarningMPWorkOperationCompleted == null)) {
                this.GetWarningMPWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningMPWorkOperationCompleted);
            }
            this.InvokeAsync("GetWarningMPWork", new object[] {
                        sensorId}, this.GetWarningMPWorkOperationCompleted, userState);
        }
        
        private void OnGetWarningMPWorkOperationCompleted(object arg) {
            if ((this.GetWarningMPWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningMPWorkCompleted(this, new GetWarningMPWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningMPChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarningMPChangeStateOK(out System.Data.DataTable dt) {
            object[] results = this.Invoke("GetWarningMPChangeStateOK", new object[0]);
            dt = ((System.Data.DataTable)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningMPChangeStateOKAsync() {
            this.GetWarningMPChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningMPChangeStateOKAsync(object userState) {
            if ((this.GetWarningMPChangeStateOKOperationCompleted == null)) {
                this.GetWarningMPChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningMPChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningMPChangeStateOK", new object[0], this.GetWarningMPChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningMPChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningMPChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningMPChangeStateOKCompleted(this, new GetWarningMPChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningMPNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarningMPNeedSend(out System.Data.DataTable dt) {
            object[] results = this.Invoke("GetWarningMPNeedSend", new object[0]);
            dt = ((System.Data.DataTable)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningMPNeedSendAsync() {
            this.GetWarningMPNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningMPNeedSendAsync(object userState) {
            if ((this.GetWarningMPNeedSendOperationCompleted == null)) {
                this.GetWarningMPNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningMPNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningMPNeedSend", new object[0], this.GetWarningMPNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningMPNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningMPNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningMPNeedSendCompleted(this, new GetWarningMPNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetContentWork(string sensorId) {
            object[] results = this.Invoke("GetContentWork", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentWorkAsync(string sensorId) {
            this.GetContentWorkAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetContentWorkAsync(string sensorId, object userState) {
            if ((this.GetContentWorkOperationCompleted == null)) {
                this.GetContentWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentWorkOperationCompleted);
            }
            this.InvokeAsync("GetContentWork", new object[] {
                        sensorId}, this.GetContentWorkOperationCompleted, userState);
        }
        
        private void OnGetContentWorkOperationCompleted(object arg) {
            if ((this.GetContentWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentWorkCompleted(this, new GetContentWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxLastUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetMaxLastUpdate(string sensorId) {
            object[] results = this.Invoke("GetMaxLastUpdate", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaxLastUpdateAsync(string sensorId) {
            this.GetMaxLastUpdateAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetMaxLastUpdateAsync(string sensorId, object userState) {
            if ((this.GetMaxLastUpdateOperationCompleted == null)) {
                this.GetMaxLastUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaxLastUpdateOperationCompleted);
            }
            this.InvokeAsync("GetMaxLastUpdate", new object[] {
                        sensorId}, this.GetMaxLastUpdateOperationCompleted, userState);
        }
        
        private void OnGetMaxLastUpdateOperationCompleted(object arg) {
            if ((this.GetMaxLastUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaxLastUpdateCompleted(this, new GetMaxLastUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePingOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePingOK(string warningId) {
            object[] results = this.Invoke("UpdatePingOK", new object[] {
                        warningId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePingOKAsync(string warningId) {
            this.UpdatePingOKAsync(warningId, null);
        }
        
        /// <remarks/>
        public void UpdatePingOKAsync(string warningId, object userState) {
            if ((this.UpdatePingOKOperationCompleted == null)) {
                this.UpdatePingOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePingOKOperationCompleted);
            }
            this.InvokeAsync("UpdatePingOK", new object[] {
                        warningId}, this.UpdatePingOKOperationCompleted, userState);
        }
        
        private void OnUpdatePingOKOperationCompleted(object arg) {
            if ((this.UpdatePingOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePingOKCompleted(this, new UpdatePingOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePingFail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePingFail(string jsonContent) {
            object[] results = this.Invoke("UpdatePingFail", new object[] {
                        jsonContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePingFailAsync(string jsonContent) {
            this.UpdatePingFailAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void UpdatePingFailAsync(string jsonContent, object userState) {
            if ((this.UpdatePingFailOperationCompleted == null)) {
                this.UpdatePingFailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePingFailOperationCompleted);
            }
            this.InvokeAsync("UpdatePingFail", new object[] {
                        jsonContent}, this.UpdatePingFailOperationCompleted, userState);
        }
        
        private void OnUpdatePingFailOperationCompleted(object arg) {
            if ((this.UpdatePingFailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePingFailCompleted(this, new UpdatePingFailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningNeedSend() {
            object[] results = this.Invoke("GetWarningNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningNeedSendAsync() {
            this.GetWarningNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningNeedSendAsync(object userState) {
            if ((this.GetWarningNeedSendOperationCompleted == null)) {
                this.GetWarningNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningNeedSend", new object[0], this.GetWarningNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningNeedSendCompleted(this, new GetWarningNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningContentNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningContentNeedSend() {
            object[] results = this.Invoke("GetWarningContentNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningContentNeedSendAsync() {
            this.GetWarningContentNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningContentNeedSendAsync(object userState) {
            if ((this.GetWarningContentNeedSendOperationCompleted == null)) {
                this.GetWarningContentNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningContentNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningContentNeedSend", new object[0], this.GetWarningContentNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningContentNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningContentNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningContentNeedSendCompleted(this, new GetWarningContentNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningParent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningParent(string warningId) {
            object[] results = this.Invoke("GetWarningParent", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningParentAsync(string warningId) {
            this.GetWarningParentAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetWarningParentAsync(string warningId, object userState) {
            if ((this.GetWarningParentOperationCompleted == null)) {
                this.GetWarningParentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningParentOperationCompleted);
            }
            this.InvokeAsync("GetWarningParent", new object[] {
                        warningId}, this.GetWarningParentOperationCompleted, userState);
        }
        
        private void OnGetWarningParentOperationCompleted(object arg) {
            if ((this.GetWarningParentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningParentCompleted(this, new GetWarningParentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserReceiveWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserReceiveWarning(int warningId) {
            object[] results = this.Invoke("GetUserReceiveWarning", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserReceiveWarningAsync(int warningId) {
            this.GetUserReceiveWarningAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetUserReceiveWarningAsync(int warningId, object userState) {
            if ((this.GetUserReceiveWarningOperationCompleted == null)) {
                this.GetUserReceiveWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserReceiveWarningOperationCompleted);
            }
            this.InvokeAsync("GetUserReceiveWarning", new object[] {
                        warningId}, this.GetUserReceiveWarningOperationCompleted, userState);
        }
        
        private void OnGetUserReceiveWarningOperationCompleted(object arg) {
            if ((this.GetUserReceiveWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserReceiveWarningCompleted(this, new GetUserReceiveWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPacketWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPacketWarning(int packetWarningID) {
            object[] results = this.Invoke("GetPacketWarning", new object[] {
                        packetWarningID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPacketWarningAsync(int packetWarningID) {
            this.GetPacketWarningAsync(packetWarningID, null);
        }
        
        /// <remarks/>
        public void GetPacketWarningAsync(int packetWarningID, object userState) {
            if ((this.GetPacketWarningOperationCompleted == null)) {
                this.GetPacketWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPacketWarningOperationCompleted);
            }
            this.InvokeAsync("GetPacketWarning", new object[] {
                        packetWarningID}, this.GetPacketWarningOperationCompleted, userState);
        }
        
        private void OnGetPacketWarningOperationCompleted(object arg) {
            if ((this.GetPacketWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPacketWarningCompleted(this, new GetPacketWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPacketWarningContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPacketWarningContent(int warningId) {
            object[] results = this.Invoke("GetPacketWarningContent", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPacketWarningContentAsync(int warningId) {
            this.GetPacketWarningContentAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetPacketWarningContentAsync(int warningId, object userState) {
            if ((this.GetPacketWarningContentOperationCompleted == null)) {
                this.GetPacketWarningContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPacketWarningContentOperationCompleted);
            }
            this.InvokeAsync("GetPacketWarningContent", new object[] {
                        warningId}, this.GetPacketWarningContentOperationCompleted, userState);
        }
        
        private void OnGetPacketWarningContentOperationCompleted(object arg) {
            if ((this.GetPacketWarningContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPacketWarningContentCompleted(this, new GetPacketWarningContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParentError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetParentError(int warningId) {
            object[] results = this.Invoke("GetParentError", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetParentErrorAsync(int warningId) {
            this.GetParentErrorAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetParentErrorAsync(int warningId, object userState) {
            if ((this.GetParentErrorOperationCompleted == null)) {
                this.GetParentErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParentErrorOperationCompleted);
            }
            this.InvokeAsync("GetParentError", new object[] {
                        warningId}, this.GetParentErrorOperationCompleted, userState);
        }
        
        private void OnGetParentErrorOperationCompleted(object arg) {
            if ((this.GetParentErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParentErrorCompleted(this, new GetParentErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateJustSendWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateJustSendWarning(int warningId) {
            object[] results = this.Invoke("UpdateJustSendWarning", new object[] {
                        warningId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateJustSendWarningAsync(int warningId) {
            this.UpdateJustSendWarningAsync(warningId, null);
        }
        
        /// <remarks/>
        public void UpdateJustSendWarningAsync(int warningId, object userState) {
            if ((this.UpdateJustSendWarningOperationCompleted == null)) {
                this.UpdateJustSendWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateJustSendWarningOperationCompleted);
            }
            this.InvokeAsync("UpdateJustSendWarning", new object[] {
                        warningId}, this.UpdateJustSendWarningOperationCompleted, userState);
        }
        
        private void OnUpdateJustSendWarningOperationCompleted(object arg) {
            if ((this.UpdateJustSendWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateJustSendWarningCompleted(this, new UpdateJustSendWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSuggestWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllSuggestWarning(int warningId) {
            object[] results = this.Invoke("GetAllSuggestWarning", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSuggestWarningAsync(int warningId) {
            this.GetAllSuggestWarningAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetAllSuggestWarningAsync(int warningId, object userState) {
            if ((this.GetAllSuggestWarningOperationCompleted == null)) {
                this.GetAllSuggestWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSuggestWarningOperationCompleted);
            }
            this.InvokeAsync("GetAllSuggestWarning", new object[] {
                        warningId}, this.GetAllSuggestWarningOperationCompleted, userState);
        }
        
        private void OnGetAllSuggestWarningOperationCompleted(object arg) {
            if ((this.GetAllSuggestWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSuggestWarningCompleted(this, new GetAllSuggestWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningChangeStateOK() {
            object[] results = this.Invoke("GetWarningChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningChangeStateOKAsync() {
            this.GetWarningChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningChangeStateOKAsync(object userState) {
            if ((this.GetWarningChangeStateOKOperationCompleted == null)) {
                this.GetWarningChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningChangeStateOK", new object[0], this.GetWarningChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningChangeStateOKCompleted(this, new GetWarningChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningContentChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningContentChangeStateOK() {
            object[] results = this.Invoke("GetWarningContentChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningContentChangeStateOKAsync() {
            this.GetWarningContentChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningContentChangeStateOKAsync(object userState) {
            if ((this.GetWarningContentChangeStateOKOperationCompleted == null)) {
                this.GetWarningContentChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningContentChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningContentChangeStateOK", new object[0], this.GetWarningContentChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningContentChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningContentChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningContentChangeStateOKCompleted(this, new GetWarningContentChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateJustChangeOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateJustChangeOK(int warningId) {
            object[] results = this.Invoke("UpdateJustChangeOK", new object[] {
                        warningId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateJustChangeOKAsync(int warningId) {
            this.UpdateJustChangeOKAsync(warningId, null);
        }
        
        /// <remarks/>
        public void UpdateJustChangeOKAsync(int warningId, object userState) {
            if ((this.UpdateJustChangeOKOperationCompleted == null)) {
                this.UpdateJustChangeOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateJustChangeOKOperationCompleted);
            }
            this.InvokeAsync("UpdateJustChangeOK", new object[] {
                        warningId}, this.UpdateJustChangeOKOperationCompleted, userState);
        }
        
        private void OnUpdateJustChangeOKOperationCompleted(object arg) {
            if ((this.UpdateJustChangeOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateJustChangeOKCompleted(this, new UpdateJustChangeOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWaringParentNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWaringParentNeedSend(string warningId) {
            object[] results = this.Invoke("GetWaringParentNeedSend", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaringParentNeedSendAsync(string warningId) {
            this.GetWaringParentNeedSendAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetWaringParentNeedSendAsync(string warningId, object userState) {
            if ((this.GetWaringParentNeedSendOperationCompleted == null)) {
                this.GetWaringParentNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaringParentNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWaringParentNeedSend", new object[] {
                        warningId}, this.GetWaringParentNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWaringParentNeedSendOperationCompleted(object arg) {
            if ((this.GetWaringParentNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaringParentNeedSendCompleted(this, new GetWaringParentNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWaringContentParentNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWaringContentParentNeedSend(string warningId) {
            object[] results = this.Invoke("GetWaringContentParentNeedSend", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaringContentParentNeedSendAsync(string warningId) {
            this.GetWaringContentParentNeedSendAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetWaringContentParentNeedSendAsync(string warningId, object userState) {
            if ((this.GetWaringContentParentNeedSendOperationCompleted == null)) {
                this.GetWaringContentParentNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaringContentParentNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWaringContentParentNeedSend", new object[] {
                        warningId}, this.GetWaringContentParentNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWaringContentParentNeedSendOperationCompleted(object arg) {
            if ((this.GetWaringContentParentNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaringContentParentNeedSendCompleted(this, new GetWaringContentParentNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWhiteTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWhiteTime(int warningId) {
            object[] results = this.Invoke("GetWhiteTime", new object[] {
                        warningId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWhiteTimeAsync(int warningId) {
            this.GetWhiteTimeAsync(warningId, null);
        }
        
        /// <remarks/>
        public void GetWhiteTimeAsync(int warningId, object userState) {
            if ((this.GetWhiteTimeOperationCompleted == null)) {
                this.GetWhiteTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWhiteTimeOperationCompleted);
            }
            this.InvokeAsync("GetWhiteTime", new object[] {
                        warningId}, this.GetWhiteTimeOperationCompleted, userState);
        }
        
        private void OnGetWhiteTimeOperationCompleted(object arg) {
            if ((this.GetWhiteTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWhiteTimeCompleted(this, new GetWhiteTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendWarningWithSMSAndBWC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendWarningWithSMSAndBWC(string accounts, string smsContent, string bwcContent, string bwcDetail) {
            object[] results = this.Invoke("SendWarningWithSMSAndBWC", new object[] {
                        accounts,
                        smsContent,
                        bwcContent,
                        bwcDetail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendWarningWithSMSAndBWCAsync(string accounts, string smsContent, string bwcContent, string bwcDetail) {
            this.SendWarningWithSMSAndBWCAsync(accounts, smsContent, bwcContent, bwcDetail, null);
        }
        
        /// <remarks/>
        public void SendWarningWithSMSAndBWCAsync(string accounts, string smsContent, string bwcContent, string bwcDetail, object userState) {
            if ((this.SendWarningWithSMSAndBWCOperationCompleted == null)) {
                this.SendWarningWithSMSAndBWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWarningWithSMSAndBWCOperationCompleted);
            }
            this.InvokeAsync("SendWarningWithSMSAndBWC", new object[] {
                        accounts,
                        smsContent,
                        bwcContent,
                        bwcDetail}, this.SendWarningWithSMSAndBWCOperationCompleted, userState);
        }
        
        private void OnSendWarningWithSMSAndBWCOperationCompleted(object arg) {
            if ((this.SendWarningWithSMSAndBWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWarningWithSMSAndBWCCompleted(this, new SendWarningWithSMSAndBWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendWarning(int warningPacketId, string smsContent, string emailContent, string bwcContent, string bwcContentDetail, int repeatWarning) {
            object[] results = this.Invoke("SendWarning", new object[] {
                        warningPacketId,
                        smsContent,
                        emailContent,
                        bwcContent,
                        bwcContentDetail,
                        repeatWarning});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendWarningAsync(int warningPacketId, string smsContent, string emailContent, string bwcContent, string bwcContentDetail, int repeatWarning) {
            this.SendWarningAsync(warningPacketId, smsContent, emailContent, bwcContent, bwcContentDetail, repeatWarning, null);
        }
        
        /// <remarks/>
        public void SendWarningAsync(int warningPacketId, string smsContent, string emailContent, string bwcContent, string bwcContentDetail, int repeatWarning, object userState) {
            if ((this.SendWarningOperationCompleted == null)) {
                this.SendWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendWarningOperationCompleted);
            }
            this.InvokeAsync("SendWarning", new object[] {
                        warningPacketId,
                        smsContent,
                        emailContent,
                        bwcContent,
                        bwcContentDetail,
                        repeatWarning}, this.SendWarningOperationCompleted, userState);
        }
        
        private void OnSendWarningOperationCompleted(object arg) {
            if ((this.SendWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendWarningCompleted(this, new SendWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalContentBySensorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTotalContentBySensorID(string sensorID) {
            object[] results = this.Invoke("GetTotalContentBySensorID", new object[] {
                        sensorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalContentBySensorIDAsync(string sensorID) {
            this.GetTotalContentBySensorIDAsync(sensorID, null);
        }
        
        /// <remarks/>
        public void GetTotalContentBySensorIDAsync(string sensorID, object userState) {
            if ((this.GetTotalContentBySensorIDOperationCompleted == null)) {
                this.GetTotalContentBySensorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalContentBySensorIDOperationCompleted);
            }
            this.InvokeAsync("GetTotalContentBySensorID", new object[] {
                        sensorID}, this.GetTotalContentBySensorIDOperationCompleted, userState);
        }
        
        private void OnGetTotalContentBySensorIDOperationCompleted(object arg) {
            if ((this.GetTotalContentBySensorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalContentBySensorIDCompleted(this, new GetTotalContentBySensorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLastPingForSensor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLastPingForSensor(string sensorId) {
            object[] results = this.Invoke("UpdateLastPingForSensor", new object[] {
                        sensorId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLastPingForSensorAsync(string sensorId) {
            this.UpdateLastPingForSensorAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void UpdateLastPingForSensorAsync(string sensorId, object userState) {
            if ((this.UpdateLastPingForSensorOperationCompleted == null)) {
                this.UpdateLastPingForSensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLastPingForSensorOperationCompleted);
            }
            this.InvokeAsync("UpdateLastPingForSensor", new object[] {
                        sensorId}, this.UpdateLastPingForSensorOperationCompleted, userState);
        }
        
        private void OnUpdateLastPingForSensorOperationCompleted(object arg) {
            if ((this.UpdateLastPingForSensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLastPingForSensorCompleted(this, new UpdateLastPingForSensorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSensorNotPing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSensorNotPing() {
            object[] results = this.Invoke("GetSensorNotPing", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSensorNotPingAsync() {
            this.GetSensorNotPingAsync(null);
        }
        
        /// <remarks/>
        public void GetSensorNotPingAsync(object userState) {
            if ((this.GetSensorNotPingOperationCompleted == null)) {
                this.GetSensorNotPingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensorNotPingOperationCompleted);
            }
            this.InvokeAsync("GetSensorNotPing", new object[0], this.GetSensorNotPingOperationCompleted, userState);
        }
        
        private void OnGetSensorNotPingOperationCompleted(object arg) {
            if ((this.GetSensorNotPingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSensorNotPingCompleted(this, new GetSensorNotPingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSensorChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSensorChangeStateOK() {
            object[] results = this.Invoke("GetSensorChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSensorChangeStateOKAsync() {
            this.GetSensorChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetSensorChangeStateOKAsync(object userState) {
            if ((this.GetSensorChangeStateOKOperationCompleted == null)) {
                this.GetSensorChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensorChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetSensorChangeStateOK", new object[0], this.GetSensorChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetSensorChangeStateOKOperationCompleted(object arg) {
            if ((this.GetSensorChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSensorChangeStateOKCompleted(this, new GetSensorChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SwitchDataWarningStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SwitchDataWarningStatus(string warningName, int isError, string content, string accountSendError) {
            object[] results = this.Invoke("SwitchDataWarningStatus", new object[] {
                        warningName,
                        isError,
                        content,
                        accountSendError});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SwitchDataWarningStatusAsync(string warningName, int isError, string content, string accountSendError) {
            this.SwitchDataWarningStatusAsync(warningName, isError, content, accountSendError, null);
        }
        
        /// <remarks/>
        public void SwitchDataWarningStatusAsync(string warningName, int isError, string content, string accountSendError, object userState) {
            if ((this.SwitchDataWarningStatusOperationCompleted == null)) {
                this.SwitchDataWarningStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwitchDataWarningStatusOperationCompleted);
            }
            this.InvokeAsync("SwitchDataWarningStatus", new object[] {
                        warningName,
                        isError,
                        content,
                        accountSendError}, this.SwitchDataWarningStatusOperationCompleted, userState);
        }
        
        private void OnSwitchDataWarningStatusOperationCompleted(object arg) {
            if ((this.SwitchDataWarningStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwitchDataWarningStatusCompleted(this, new SwitchDataWarningStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningDataNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningDataNeedSend() {
            object[] results = this.Invoke("GetWarningDataNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningDataNeedSendAsync() {
            this.GetWarningDataNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningDataNeedSendAsync(object userState) {
            if ((this.GetWarningDataNeedSendOperationCompleted == null)) {
                this.GetWarningDataNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningDataNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningDataNeedSend", new object[0], this.GetWarningDataNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningDataNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningDataNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningDataNeedSendCompleted(this, new GetWarningDataNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningDataChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningDataChangeStateOK() {
            object[] results = this.Invoke("GetWarningDataChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningDataChangeStateOKAsync() {
            this.GetWarningDataChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningDataChangeStateOKAsync(object userState) {
            if ((this.GetWarningDataChangeStateOKOperationCompleted == null)) {
                this.GetWarningDataChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningDataChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningDataChangeStateOK", new object[0], this.GetWarningDataChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningDataChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningDataChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningDataChangeStateOKCompleted(this, new GetWarningDataChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentPauseTooLong", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetContentPauseTooLong() {
            object[] results = this.Invoke("GetContentPauseTooLong", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentPauseTooLongAsync() {
            this.GetContentPauseTooLongAsync(null);
        }
        
        /// <remarks/>
        public void GetContentPauseTooLongAsync(object userState) {
            if ((this.GetContentPauseTooLongOperationCompleted == null)) {
                this.GetContentPauseTooLongOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentPauseTooLongOperationCompleted);
            }
            this.InvokeAsync("GetContentPauseTooLong", new object[0], this.GetContentPauseTooLongOperationCompleted, userState);
        }
        
        private void OnGetContentPauseTooLongOperationCompleted(object arg) {
            if ((this.GetContentPauseTooLongCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentPauseTooLongCompleted(this, new GetContentPauseTooLongCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePauseState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePauseState(int warningID, int pauseState, string accountAct) {
            object[] results = this.Invoke("UpdatePauseState", new object[] {
                        warningID,
                        pauseState,
                        accountAct});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePauseStateAsync(int warningID, int pauseState, string accountAct) {
            this.UpdatePauseStateAsync(warningID, pauseState, accountAct, null);
        }
        
        /// <remarks/>
        public void UpdatePauseStateAsync(int warningID, int pauseState, string accountAct, object userState) {
            if ((this.UpdatePauseStateOperationCompleted == null)) {
                this.UpdatePauseStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePauseStateOperationCompleted);
            }
            this.InvokeAsync("UpdatePauseState", new object[] {
                        warningID,
                        pauseState,
                        accountAct}, this.UpdatePauseStateOperationCompleted, userState);
        }
        
        private void OnUpdatePauseStateOperationCompleted(object arg) {
            if ((this.UpdatePauseStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePauseStateCompleted(this, new UpdatePauseStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePauseStateBySMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePauseStateBySMS(int smsId, string accountAct, int pauseState) {
            object[] results = this.Invoke("UpdatePauseStateBySMS", new object[] {
                        smsId,
                        accountAct,
                        pauseState});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePauseStateBySMSAsync(int smsId, string accountAct, int pauseState) {
            this.UpdatePauseStateBySMSAsync(smsId, accountAct, pauseState, null);
        }
        
        /// <remarks/>
        public void UpdatePauseStateBySMSAsync(int smsId, string accountAct, int pauseState, object userState) {
            if ((this.UpdatePauseStateBySMSOperationCompleted == null)) {
                this.UpdatePauseStateBySMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePauseStateBySMSOperationCompleted);
            }
            this.InvokeAsync("UpdatePauseStateBySMS", new object[] {
                        smsId,
                        accountAct,
                        pauseState}, this.UpdatePauseStateBySMSOperationCompleted, userState);
        }
        
        private void OnUpdatePauseStateBySMSOperationCompleted(object arg) {
            if ((this.UpdatePauseStateBySMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePauseStateBySMSCompleted(this, new UpdatePauseStateBySMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendInfoByReplySMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendInfoByReplySMS(int smsId, string accountAct, string content) {
            object[] results = this.Invoke("SendInfoByReplySMS", new object[] {
                        smsId,
                        accountAct,
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendInfoByReplySMSAsync(int smsId, string accountAct, string content) {
            this.SendInfoByReplySMSAsync(smsId, accountAct, content, null);
        }
        
        /// <remarks/>
        public void SendInfoByReplySMSAsync(int smsId, string accountAct, string content, object userState) {
            if ((this.SendInfoByReplySMSOperationCompleted == null)) {
                this.SendInfoByReplySMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendInfoByReplySMSOperationCompleted);
            }
            this.InvokeAsync("SendInfoByReplySMS", new object[] {
                        smsId,
                        accountAct,
                        content}, this.SendInfoByReplySMSOperationCompleted, userState);
        }
        
        private void OnSendInfoByReplySMSOperationCompleted(object arg) {
            if ((this.SendInfoByReplySMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendInfoByReplySMSCompleted(this, new SendInfoByReplySMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLastPingForToolSendWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLastPingForToolSendWarning() {
            object[] results = this.Invoke("UpdateLastPingForToolSendWarning", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLastPingForToolSendWarningAsync() {
            this.UpdateLastPingForToolSendWarningAsync(null);
        }
        
        /// <remarks/>
        public void UpdateLastPingForToolSendWarningAsync(object userState) {
            if ((this.UpdateLastPingForToolSendWarningOperationCompleted == null)) {
                this.UpdateLastPingForToolSendWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLastPingForToolSendWarningOperationCompleted);
            }
            this.InvokeAsync("UpdateLastPingForToolSendWarning", new object[0], this.UpdateLastPingForToolSendWarningOperationCompleted, userState);
        }
        
        private void OnUpdateLastPingForToolSendWarningOperationCompleted(object arg) {
            if ((this.UpdateLastPingForToolSendWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLastPingForToolSendWarningCompleted(this, new UpdateLastPingForToolSendWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WarningDataUpdateLastPingById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WarningDataUpdateLastPingById(int warningId) {
            object[] results = this.Invoke("WarningDataUpdateLastPingById", new object[] {
                        warningId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WarningDataUpdateLastPingByIdAsync(int warningId) {
            this.WarningDataUpdateLastPingByIdAsync(warningId, null);
        }
        
        /// <remarks/>
        public void WarningDataUpdateLastPingByIdAsync(int warningId, object userState) {
            if ((this.WarningDataUpdateLastPingByIdOperationCompleted == null)) {
                this.WarningDataUpdateLastPingByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWarningDataUpdateLastPingByIdOperationCompleted);
            }
            this.InvokeAsync("WarningDataUpdateLastPingById", new object[] {
                        warningId}, this.WarningDataUpdateLastPingByIdOperationCompleted, userState);
        }
        
        private void OnWarningDataUpdateLastPingByIdOperationCompleted(object arg) {
            if ((this.WarningDataUpdateLastPingByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WarningDataUpdateLastPingByIdCompleted(this, new WarningDataUpdateLastPingByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WarningDataUpdateLastPing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WarningDataUpdateLastPing(int warningId, System.DateTime timePing) {
            object[] results = this.Invoke("WarningDataUpdateLastPing", new object[] {
                        warningId,
                        timePing});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WarningDataUpdateLastPingAsync(int warningId, System.DateTime timePing) {
            this.WarningDataUpdateLastPingAsync(warningId, timePing, null);
        }
        
        /// <remarks/>
        public void WarningDataUpdateLastPingAsync(int warningId, System.DateTime timePing, object userState) {
            if ((this.WarningDataUpdateLastPingOperationCompleted == null)) {
                this.WarningDataUpdateLastPingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWarningDataUpdateLastPingOperationCompleted);
            }
            this.InvokeAsync("WarningDataUpdateLastPing", new object[] {
                        warningId,
                        timePing}, this.WarningDataUpdateLastPingOperationCompleted, userState);
        }
        
        private void OnWarningDataUpdateLastPingOperationCompleted(object arg) {
            if ((this.WarningDataUpdateLastPingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WarningDataUpdateLastPingCompleted(this, new WarningDataUpdateLastPingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckToolSendWarningActive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckToolSendWarningActive() {
            object[] results = this.Invoke("CheckToolSendWarningActive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckToolSendWarningActiveAsync() {
            this.CheckToolSendWarningActiveAsync(null);
        }
        
        /// <remarks/>
        public void CheckToolSendWarningActiveAsync(object userState) {
            if ((this.CheckToolSendWarningActiveOperationCompleted == null)) {
                this.CheckToolSendWarningActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckToolSendWarningActiveOperationCompleted);
            }
            this.InvokeAsync("CheckToolSendWarningActive", new object[0], this.CheckToolSendWarningActiveOperationCompleted, userState);
        }
        
        private void OnCheckToolSendWarningActiveOperationCompleted(object arg) {
            if ((this.CheckToolSendWarningActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckToolSendWarningActiveCompleted(this, new CheckToolSendWarningActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckToolActive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckToolActive(int warningId) {
            object[] results = this.Invoke("CheckToolActive", new object[] {
                        warningId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckToolActiveAsync(int warningId) {
            this.CheckToolActiveAsync(warningId, null);
        }
        
        /// <remarks/>
        public void CheckToolActiveAsync(int warningId, object userState) {
            if ((this.CheckToolActiveOperationCompleted == null)) {
                this.CheckToolActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckToolActiveOperationCompleted);
            }
            this.InvokeAsync("CheckToolActive", new object[] {
                        warningId}, this.CheckToolActiveOperationCompleted, userState);
        }
        
        private void OnCheckToolActiveOperationCompleted(object arg) {
            if ((this.CheckToolActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckToolActiveCompleted(this, new CheckToolActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateWindowWarningBySensorId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUpdateWindowWarningBySensorId(string sensorId) {
            object[] results = this.Invoke("GetUpdateWindowWarningBySensorId", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateWindowWarningBySensorIdAsync(string sensorId) {
            this.GetUpdateWindowWarningBySensorIdAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetUpdateWindowWarningBySensorIdAsync(string sensorId, object userState) {
            if ((this.GetUpdateWindowWarningBySensorIdOperationCompleted == null)) {
                this.GetUpdateWindowWarningBySensorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateWindowWarningBySensorIdOperationCompleted);
            }
            this.InvokeAsync("GetUpdateWindowWarningBySensorId", new object[] {
                        sensorId}, this.GetUpdateWindowWarningBySensorIdOperationCompleted, userState);
        }
        
        private void OnGetUpdateWindowWarningBySensorIdOperationCompleted(object arg) {
            if ((this.GetUpdateWindowWarningBySensorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateWindowWarningBySensorIdCompleted(this, new GetUpdateWindowWarningBySensorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessUpdateWindowWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessUpdateWindowWarning(string jsonContent) {
            object[] results = this.Invoke("ProcessUpdateWindowWarning", new object[] {
                        jsonContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessUpdateWindowWarningAsync(string jsonContent) {
            this.ProcessUpdateWindowWarningAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void ProcessUpdateWindowWarningAsync(string jsonContent, object userState) {
            if ((this.ProcessUpdateWindowWarningOperationCompleted == null)) {
                this.ProcessUpdateWindowWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessUpdateWindowWarningOperationCompleted);
            }
            this.InvokeAsync("ProcessUpdateWindowWarning", new object[] {
                        jsonContent}, this.ProcessUpdateWindowWarningOperationCompleted, userState);
        }
        
        private void OnProcessUpdateWindowWarningOperationCompleted(object arg) {
            if ((this.ProcessUpdateWindowWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessUpdateWindowWarningCompleted(this, new ProcessUpdateWindowWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateWindowNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUpdateWindowNeedSend() {
            object[] results = this.Invoke("GetUpdateWindowNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateWindowNeedSendAsync() {
            this.GetUpdateWindowNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdateWindowNeedSendAsync(object userState) {
            if ((this.GetUpdateWindowNeedSendOperationCompleted == null)) {
                this.GetUpdateWindowNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateWindowNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetUpdateWindowNeedSend", new object[0], this.GetUpdateWindowNeedSendOperationCompleted, userState);
        }
        
        private void OnGetUpdateWindowNeedSendOperationCompleted(object arg) {
            if ((this.GetUpdateWindowNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateWindowNeedSendCompleted(this, new GetUpdateWindowNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateWindowChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUpdateWindowChangeStateOK() {
            object[] results = this.Invoke("GetUpdateWindowChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateWindowChangeStateOKAsync() {
            this.GetUpdateWindowChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdateWindowChangeStateOKAsync(object userState) {
            if ((this.GetUpdateWindowChangeStateOKOperationCompleted == null)) {
                this.GetUpdateWindowChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateWindowChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetUpdateWindowChangeStateOK", new object[0], this.GetUpdateWindowChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetUpdateWindowChangeStateOKOperationCompleted(object arg) {
            if ((this.GetUpdateWindowChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateWindowChangeStateOKCompleted(this, new GetUpdateWindowChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDriveBySensorId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDriveBySensorId(string sensorId) {
            object[] results = this.Invoke("GetDriveBySensorId", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriveBySensorIdAsync(string sensorId) {
            this.GetDriveBySensorIdAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetDriveBySensorIdAsync(string sensorId, object userState) {
            if ((this.GetDriveBySensorIdOperationCompleted == null)) {
                this.GetDriveBySensorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriveBySensorIdOperationCompleted);
            }
            this.InvokeAsync("GetDriveBySensorId", new object[] {
                        sensorId}, this.GetDriveBySensorIdOperationCompleted, userState);
        }
        
        private void OnGetDriveBySensorIdOperationCompleted(object arg) {
            if ((this.GetDriveBySensorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriveBySensorIdCompleted(this, new GetDriveBySensorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessDriveWarning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessDriveWarning(string jsonContent) {
            object[] results = this.Invoke("ProcessDriveWarning", new object[] {
                        jsonContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessDriveWarningAsync(string jsonContent) {
            this.ProcessDriveWarningAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void ProcessDriveWarningAsync(string jsonContent, object userState) {
            if ((this.ProcessDriveWarningOperationCompleted == null)) {
                this.ProcessDriveWarningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDriveWarningOperationCompleted);
            }
            this.InvokeAsync("ProcessDriveWarning", new object[] {
                        jsonContent}, this.ProcessDriveWarningOperationCompleted, userState);
        }
        
        private void OnProcessDriveWarningOperationCompleted(object arg) {
            if ((this.ProcessDriveWarningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDriveWarningCompleted(this, new ProcessDriveWarningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDriveWarningNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDriveWarningNeedSend() {
            object[] results = this.Invoke("GetDriveWarningNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriveWarningNeedSendAsync() {
            this.GetDriveWarningNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetDriveWarningNeedSendAsync(object userState) {
            if ((this.GetDriveWarningNeedSendOperationCompleted == null)) {
                this.GetDriveWarningNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriveWarningNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetDriveWarningNeedSend", new object[0], this.GetDriveWarningNeedSendOperationCompleted, userState);
        }
        
        private void OnGetDriveWarningNeedSendOperationCompleted(object arg) {
            if ((this.GetDriveWarningNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriveWarningNeedSendCompleted(this, new GetDriveWarningNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDriveWarningChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDriveWarningChangeStateOK() {
            object[] results = this.Invoke("GetDriveWarningChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDriveWarningChangeStateOKAsync() {
            this.GetDriveWarningChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetDriveWarningChangeStateOKAsync(object userState) {
            if ((this.GetDriveWarningChangeStateOKOperationCompleted == null)) {
                this.GetDriveWarningChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDriveWarningChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetDriveWarningChangeStateOK", new object[0], this.GetDriveWarningChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetDriveWarningChangeStateOKOperationCompleted(object arg) {
            if ((this.GetDriveWarningChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDriveWarningChangeStateOKCompleted(this, new GetDriveWarningChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetResourceWork(string sensorId) {
            object[] results = this.Invoke("GetResourceWork", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceWorkAsync(string sensorId) {
            this.GetResourceWorkAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetResourceWorkAsync(string sensorId, object userState) {
            if ((this.GetResourceWorkOperationCompleted == null)) {
                this.GetResourceWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceWorkOperationCompleted);
            }
            this.InvokeAsync("GetResourceWork", new object[] {
                        sensorId}, this.GetResourceWorkOperationCompleted, userState);
        }
        
        private void OnGetResourceWorkOperationCompleted(object arg) {
            if ((this.GetResourceWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceWorkCompleted(this, new GetResourceWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceWarningNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetResourceWarningNeedSend() {
            object[] results = this.Invoke("GetResourceWarningNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceWarningNeedSendAsync() {
            this.GetResourceWarningNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetResourceWarningNeedSendAsync(object userState) {
            if ((this.GetResourceWarningNeedSendOperationCompleted == null)) {
                this.GetResourceWarningNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceWarningNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetResourceWarningNeedSend", new object[0], this.GetResourceWarningNeedSendOperationCompleted, userState);
        }
        
        private void OnGetResourceWarningNeedSendOperationCompleted(object arg) {
            if ((this.GetResourceWarningNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceWarningNeedSendCompleted(this, new GetResourceWarningNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceWarningChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetResourceWarningChangeStateOK() {
            object[] results = this.Invoke("GetResourceWarningChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceWarningChangeStateOKAsync() {
            this.GetResourceWarningChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetResourceWarningChangeStateOKAsync(object userState) {
            if ((this.GetResourceWarningChangeStateOKOperationCompleted == null)) {
                this.GetResourceWarningChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceWarningChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetResourceWarningChangeStateOK", new object[0], this.GetResourceWarningChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetResourceWarningChangeStateOKOperationCompleted(object arg) {
            if ((this.GetResourceWarningChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceWarningChangeStateOKCompleted(this, new GetResourceWarningChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDatabaseWarningBySensorId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDatabaseWarningBySensorId(string sensorId) {
            object[] results = this.Invoke("GetDatabaseWarningBySensorId", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabaseWarningBySensorIdAsync(string sensorId) {
            this.GetDatabaseWarningBySensorIdAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetDatabaseWarningBySensorIdAsync(string sensorId, object userState) {
            if ((this.GetDatabaseWarningBySensorIdOperationCompleted == null)) {
                this.GetDatabaseWarningBySensorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabaseWarningBySensorIdOperationCompleted);
            }
            this.InvokeAsync("GetDatabaseWarningBySensorId", new object[] {
                        sensorId}, this.GetDatabaseWarningBySensorIdOperationCompleted, userState);
        }
        
        private void OnGetDatabaseWarningBySensorIdOperationCompleted(object arg) {
            if ((this.GetDatabaseWarningBySensorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabaseWarningBySensorIdCompleted(this, new GetDatabaseWarningBySensorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoCheckDbByConfigId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInfoCheckDbByConfigId(string configId) {
            object[] results = this.Invoke("GetInfoCheckDbByConfigId", new object[] {
                        configId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoCheckDbByConfigIdAsync(string configId) {
            this.GetInfoCheckDbByConfigIdAsync(configId, null);
        }
        
        /// <remarks/>
        public void GetInfoCheckDbByConfigIdAsync(string configId, object userState) {
            if ((this.GetInfoCheckDbByConfigIdOperationCompleted == null)) {
                this.GetInfoCheckDbByConfigIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoCheckDbByConfigIdOperationCompleted);
            }
            this.InvokeAsync("GetInfoCheckDbByConfigId", new object[] {
                        configId}, this.GetInfoCheckDbByConfigIdOperationCompleted, userState);
        }
        
        private void OnGetInfoCheckDbByConfigIdOperationCompleted(object arg) {
            if ((this.GetInfoCheckDbByConfigIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoCheckDbByConfigIdCompleted(this, new GetInfoCheckDbByConfigIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncDatabaseNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSyncDatabaseNeedSend() {
            object[] results = this.Invoke("GetSyncDatabaseNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncDatabaseNeedSendAsync() {
            this.GetSyncDatabaseNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncDatabaseNeedSendAsync(object userState) {
            if ((this.GetSyncDatabaseNeedSendOperationCompleted == null)) {
                this.GetSyncDatabaseNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncDatabaseNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetSyncDatabaseNeedSend", new object[0], this.GetSyncDatabaseNeedSendOperationCompleted, userState);
        }
        
        private void OnGetSyncDatabaseNeedSendOperationCompleted(object arg) {
            if ((this.GetSyncDatabaseNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncDatabaseNeedSendCompleted(this, new GetSyncDatabaseNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncDatabaseChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSyncDatabaseChangeStateOK() {
            object[] results = this.Invoke("GetSyncDatabaseChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncDatabaseChangeStateOKAsync() {
            this.GetSyncDatabaseChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncDatabaseChangeStateOKAsync(object userState) {
            if ((this.GetSyncDatabaseChangeStateOKOperationCompleted == null)) {
                this.GetSyncDatabaseChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncDatabaseChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetSyncDatabaseChangeStateOK", new object[0], this.GetSyncDatabaseChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetSyncDatabaseChangeStateOKOperationCompleted(object arg) {
            if ((this.GetSyncDatabaseChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncDatabaseChangeStateOKCompleted(this, new GetSyncDatabaseChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncFolderWarningBySensorId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSyncFolderWarningBySensorId(string sensorId) {
            object[] results = this.Invoke("GetSyncFolderWarningBySensorId", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncFolderWarningBySensorIdAsync(string sensorId) {
            this.GetSyncFolderWarningBySensorIdAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetSyncFolderWarningBySensorIdAsync(string sensorId, object userState) {
            if ((this.GetSyncFolderWarningBySensorIdOperationCompleted == null)) {
                this.GetSyncFolderWarningBySensorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncFolderWarningBySensorIdOperationCompleted);
            }
            this.InvokeAsync("GetSyncFolderWarningBySensorId", new object[] {
                        sensorId}, this.GetSyncFolderWarningBySensorIdOperationCompleted, userState);
        }
        
        private void OnGetSyncFolderWarningBySensorIdOperationCompleted(object arg) {
            if ((this.GetSyncFolderWarningBySensorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncFolderWarningBySensorIdCompleted(this, new GetSyncFolderWarningBySensorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAnalyzeLogResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAnalyzeLogResult(string jsonContent) {
            object[] results = this.Invoke("UpdateAnalyzeLogResult", new object[] {
                        jsonContent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAnalyzeLogResultAsync(string jsonContent) {
            this.UpdateAnalyzeLogResultAsync(jsonContent, null);
        }
        
        /// <remarks/>
        public void UpdateAnalyzeLogResultAsync(string jsonContent, object userState) {
            if ((this.UpdateAnalyzeLogResultOperationCompleted == null)) {
                this.UpdateAnalyzeLogResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAnalyzeLogResultOperationCompleted);
            }
            this.InvokeAsync("UpdateAnalyzeLogResult", new object[] {
                        jsonContent}, this.UpdateAnalyzeLogResultOperationCompleted, userState);
        }
        
        private void OnUpdateAnalyzeLogResultOperationCompleted(object arg) {
            if ((this.UpdateAnalyzeLogResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAnalyzeLogResultCompleted(this, new UpdateAnalyzeLogResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncFolderNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSyncFolderNeedSend() {
            object[] results = this.Invoke("GetSyncFolderNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncFolderNeedSendAsync() {
            this.GetSyncFolderNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncFolderNeedSendAsync(object userState) {
            if ((this.GetSyncFolderNeedSendOperationCompleted == null)) {
                this.GetSyncFolderNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncFolderNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetSyncFolderNeedSend", new object[0], this.GetSyncFolderNeedSendOperationCompleted, userState);
        }
        
        private void OnGetSyncFolderNeedSendOperationCompleted(object arg) {
            if ((this.GetSyncFolderNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncFolderNeedSendCompleted(this, new GetSyncFolderNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSyncFolderChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSyncFolderChangeStateOK() {
            object[] results = this.Invoke("GetSyncFolderChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSyncFolderChangeStateOKAsync() {
            this.GetSyncFolderChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetSyncFolderChangeStateOKAsync(object userState) {
            if ((this.GetSyncFolderChangeStateOKOperationCompleted == null)) {
                this.GetSyncFolderChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSyncFolderChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetSyncFolderChangeStateOK", new object[0], this.GetSyncFolderChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetSyncFolderChangeStateOKOperationCompleted(object arg) {
            if ((this.GetSyncFolderChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSyncFolderChangeStateOKCompleted(this, new GetSyncFolderChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningDDosBySensorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningDDosBySensorID(string sensorId) {
            object[] results = this.Invoke("GetWarningDDosBySensorID", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningDDosBySensorIDAsync(string sensorId) {
            this.GetWarningDDosBySensorIDAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetWarningDDosBySensorIDAsync(string sensorId, object userState) {
            if ((this.GetWarningDDosBySensorIDOperationCompleted == null)) {
                this.GetWarningDDosBySensorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningDDosBySensorIDOperationCompleted);
            }
            this.InvokeAsync("GetWarningDDosBySensorID", new object[] {
                        sensorId}, this.GetWarningDDosBySensorIDOperationCompleted, userState);
        }
        
        private void OnGetWarningDDosBySensorIDOperationCompleted(object arg) {
            if ((this.GetWarningDDosBySensorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningDDosBySensorIDCompleted(this, new GetWarningDDosBySensorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningDDosNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningDDosNeedSend() {
            object[] results = this.Invoke("GetWarningDDosNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningDDosNeedSendAsync() {
            this.GetWarningDDosNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningDDosNeedSendAsync(object userState) {
            if ((this.GetWarningDDosNeedSendOperationCompleted == null)) {
                this.GetWarningDDosNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningDDosNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningDDosNeedSend", new object[0], this.GetWarningDDosNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningDDosNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningDDosNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningDDosNeedSendCompleted(this, new GetWarningDDosNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningDDosChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningDDosChangeStateOK() {
            object[] results = this.Invoke("GetWarningDDosChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningDDosChangeStateOKAsync() {
            this.GetWarningDDosChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningDDosChangeStateOKAsync(object userState) {
            if ((this.GetWarningDDosChangeStateOKOperationCompleted == null)) {
                this.GetWarningDDosChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningDDosChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningDDosChangeStateOK", new object[0], this.GetWarningDDosChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningDDosChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningDDosChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningDDosChangeStateOKCompleted(this, new GetWarningDDosChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningWebAttackBySensorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningWebAttackBySensorID(string sensorId) {
            object[] results = this.Invoke("GetWarningWebAttackBySensorID", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningWebAttackBySensorIDAsync(string sensorId) {
            this.GetWarningWebAttackBySensorIDAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetWarningWebAttackBySensorIDAsync(string sensorId, object userState) {
            if ((this.GetWarningWebAttackBySensorIDOperationCompleted == null)) {
                this.GetWarningWebAttackBySensorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningWebAttackBySensorIDOperationCompleted);
            }
            this.InvokeAsync("GetWarningWebAttackBySensorID", new object[] {
                        sensorId}, this.GetWarningWebAttackBySensorIDOperationCompleted, userState);
        }
        
        private void OnGetWarningWebAttackBySensorIDOperationCompleted(object arg) {
            if ((this.GetWarningWebAttackBySensorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningWebAttackBySensorIDCompleted(this, new GetWarningWebAttackBySensorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningWebAttackNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningWebAttackNeedSend() {
            object[] results = this.Invoke("GetWarningWebAttackNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningWebAttackNeedSendAsync() {
            this.GetWarningWebAttackNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningWebAttackNeedSendAsync(object userState) {
            if ((this.GetWarningWebAttackNeedSendOperationCompleted == null)) {
                this.GetWarningWebAttackNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningWebAttackNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningWebAttackNeedSend", new object[0], this.GetWarningWebAttackNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningWebAttackNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningWebAttackNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningWebAttackNeedSendCompleted(this, new GetWarningWebAttackNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningWebAttackChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningWebAttackChangeStateOK() {
            object[] results = this.Invoke("GetWarningWebAttackChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningWebAttackChangeStateOKAsync() {
            this.GetWarningWebAttackChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningWebAttackChangeStateOKAsync(object userState) {
            if ((this.GetWarningWebAttackChangeStateOKOperationCompleted == null)) {
                this.GetWarningWebAttackChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningWebAttackChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningWebAttackChangeStateOK", new object[0], this.GetWarningWebAttackChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningWebAttackChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningWebAttackChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningWebAttackChangeStateOKCompleted(this, new GetWarningWebAttackChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningEventLogBySensorID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningEventLogBySensorID(string sensorId) {
            object[] results = this.Invoke("GetWarningEventLogBySensorID", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningEventLogBySensorIDAsync(string sensorId) {
            this.GetWarningEventLogBySensorIDAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetWarningEventLogBySensorIDAsync(string sensorId, object userState) {
            if ((this.GetWarningEventLogBySensorIDOperationCompleted == null)) {
                this.GetWarningEventLogBySensorIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningEventLogBySensorIDOperationCompleted);
            }
            this.InvokeAsync("GetWarningEventLogBySensorID", new object[] {
                        sensorId}, this.GetWarningEventLogBySensorIDOperationCompleted, userState);
        }
        
        private void OnGetWarningEventLogBySensorIDOperationCompleted(object arg) {
            if ((this.GetWarningEventLogBySensorIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningEventLogBySensorIDCompleted(this, new GetWarningEventLogBySensorIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningEventLogNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningEventLogNeedSend() {
            object[] results = this.Invoke("GetWarningEventLogNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningEventLogNeedSendAsync() {
            this.GetWarningEventLogNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningEventLogNeedSendAsync(object userState) {
            if ((this.GetWarningEventLogNeedSendOperationCompleted == null)) {
                this.GetWarningEventLogNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningEventLogNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningEventLogNeedSend", new object[0], this.GetWarningEventLogNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningEventLogNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningEventLogNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningEventLogNeedSendCompleted(this, new GetWarningEventLogNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningEventLogChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningEventLogChangeStateOK() {
            object[] results = this.Invoke("GetWarningEventLogChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningEventLogChangeStateOKAsync() {
            this.GetWarningEventLogChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningEventLogChangeStateOKAsync(object userState) {
            if ((this.GetWarningEventLogChangeStateOKOperationCompleted == null)) {
                this.GetWarningEventLogChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningEventLogChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningEventLogChangeStateOK", new object[0], this.GetWarningEventLogChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningEventLogChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningEventLogChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningEventLogChangeStateOKCompleted(this, new GetWarningEventLogChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFolderWork", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFolderWork(string sensorId) {
            object[] results = this.Invoke("GetFolderWork", new object[] {
                        sensorId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderWorkAsync(string sensorId) {
            this.GetFolderWorkAsync(sensorId, null);
        }
        
        /// <remarks/>
        public void GetFolderWorkAsync(string sensorId, object userState) {
            if ((this.GetFolderWorkOperationCompleted == null)) {
                this.GetFolderWorkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderWorkOperationCompleted);
            }
            this.InvokeAsync("GetFolderWork", new object[] {
                        sensorId}, this.GetFolderWorkOperationCompleted, userState);
        }
        
        private void OnGetFolderWorkOperationCompleted(object arg) {
            if ((this.GetFolderWorkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderWorkCompleted(this, new GetFolderWorkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessFolder(string json, int getSample) {
            object[] results = this.Invoke("ProcessFolder", new object[] {
                        json,
                        getSample});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessFolderAsync(string json, int getSample) {
            this.ProcessFolderAsync(json, getSample, null);
        }
        
        /// <remarks/>
        public void ProcessFolderAsync(string json, int getSample, object userState) {
            if ((this.ProcessFolderOperationCompleted == null)) {
                this.ProcessFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessFolderOperationCompleted);
            }
            this.InvokeAsync("ProcessFolder", new object[] {
                        json,
                        getSample}, this.ProcessFolderOperationCompleted, userState);
        }
        
        private void OnProcessFolderOperationCompleted(object arg) {
            if ((this.ProcessFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessFolderCompleted(this, new ProcessFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningFolderNeedSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningFolderNeedSend() {
            object[] results = this.Invoke("GetWarningFolderNeedSend", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningFolderNeedSendAsync() {
            this.GetWarningFolderNeedSendAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningFolderNeedSendAsync(object userState) {
            if ((this.GetWarningFolderNeedSendOperationCompleted == null)) {
                this.GetWarningFolderNeedSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningFolderNeedSendOperationCompleted);
            }
            this.InvokeAsync("GetWarningFolderNeedSend", new object[0], this.GetWarningFolderNeedSendOperationCompleted, userState);
        }
        
        private void OnGetWarningFolderNeedSendOperationCompleted(object arg) {
            if ((this.GetWarningFolderNeedSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningFolderNeedSendCompleted(this, new GetWarningFolderNeedSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarningFolderChangeStateOK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWarningFolderChangeStateOK() {
            object[] results = this.Invoke("GetWarningFolderChangeStateOK", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarningFolderChangeStateOKAsync() {
            this.GetWarningFolderChangeStateOKAsync(null);
        }
        
        /// <remarks/>
        public void GetWarningFolderChangeStateOKAsync(object userState) {
            if ((this.GetWarningFolderChangeStateOKOperationCompleted == null)) {
                this.GetWarningFolderChangeStateOKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarningFolderChangeStateOKOperationCompleted);
            }
            this.InvokeAsync("GetWarningFolderChangeStateOK", new object[0], this.GetWarningFolderChangeStateOKOperationCompleted, userState);
        }
        
        private void OnGetWarningFolderChangeStateOKOperationCompleted(object arg) {
            if ((this.GetWarningFolderChangeStateOKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarningFolderChangeStateOKCompleted(this, new GetWarningFolderChangeStateOKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertWarningLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertWarningLog(int warningId, int actionTypeId, int warningTypeId, string contentErrorSMS, string contentErrorEmail, string contentErrorBWC, int repeatWarning) {
            object[] results = this.Invoke("InsertWarningLog", new object[] {
                        warningId,
                        actionTypeId,
                        warningTypeId,
                        contentErrorSMS,
                        contentErrorEmail,
                        contentErrorBWC,
                        repeatWarning});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWarningLogAsync(int warningId, int actionTypeId, int warningTypeId, string contentErrorSMS, string contentErrorEmail, string contentErrorBWC, int repeatWarning) {
            this.InsertWarningLogAsync(warningId, actionTypeId, warningTypeId, contentErrorSMS, contentErrorEmail, contentErrorBWC, repeatWarning, null);
        }
        
        /// <remarks/>
        public void InsertWarningLogAsync(int warningId, int actionTypeId, int warningTypeId, string contentErrorSMS, string contentErrorEmail, string contentErrorBWC, int repeatWarning, object userState) {
            if ((this.InsertWarningLogOperationCompleted == null)) {
                this.InsertWarningLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWarningLogOperationCompleted);
            }
            this.InvokeAsync("InsertWarningLog", new object[] {
                        warningId,
                        actionTypeId,
                        warningTypeId,
                        contentErrorSMS,
                        contentErrorEmail,
                        contentErrorBWC,
                        repeatWarning}, this.InsertWarningLogOperationCompleted, userState);
        }
        
        private void OnInsertWarningLogOperationCompleted(object arg) {
            if ((this.InsertWarningLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWarningLogCompleted(this, new InsertWarningLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupAndUserByLogId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGroupAndUserByLogId(int logId) {
            object[] results = this.Invoke("GetGroupAndUserByLogId", new object[] {
                        logId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAndUserByLogIdAsync(int logId) {
            this.GetGroupAndUserByLogIdAsync(logId, null);
        }
        
        /// <remarks/>
        public void GetGroupAndUserByLogIdAsync(int logId, object userState) {
            if ((this.GetGroupAndUserByLogIdOperationCompleted == null)) {
                this.GetGroupAndUserByLogIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupAndUserByLogIdOperationCompleted);
            }
            this.InvokeAsync("GetGroupAndUserByLogId", new object[] {
                        logId}, this.GetGroupAndUserByLogIdOperationCompleted, userState);
        }
        
        private void OnGetGroupAndUserByLogIdOperationCompleted(object arg) {
            if ((this.GetGroupAndUserByLogIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupAndUserByLogIdCompleted(this, new GetGroupAndUserByLogIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ViolationWarningAccountVO {
        
        private int idField;
        
        private string accountField;
        
        private string contentField;
        
        private string dateTickField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string DateTick {
            get {
                return this.dateTickField;
            }
            set {
                this.dateTickField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ViolatedWarningVO {
        
        private int warningIDField;
        
        private int repeatWarningField;
        
        private int thresholdViolationField;
        
        private string objectWarningField;
        
        private string groupBSGField;
        
        private string violatedAccsField;
        
        /// <remarks/>
        public int WarningID {
            get {
                return this.warningIDField;
            }
            set {
                this.warningIDField = value;
            }
        }
        
        /// <remarks/>
        public int RepeatWarning {
            get {
                return this.repeatWarningField;
            }
            set {
                this.repeatWarningField = value;
            }
        }
        
        /// <remarks/>
        public int ThresholdViolation {
            get {
                return this.thresholdViolationField;
            }
            set {
                this.thresholdViolationField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectWarning {
            get {
                return this.objectWarningField;
            }
            set {
                this.objectWarningField = value;
            }
        }
        
        /// <remarks/>
        public string GroupBSG {
            get {
                return this.groupBSGField;
            }
            set {
                this.groupBSGField = value;
            }
        }
        
        /// <remarks/>
        public string ViolatedAccs {
            get {
                return this.violatedAccsField;
            }
            set {
                this.violatedAccsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ResultVO {
        
        private bool resultField;
        
        private string messageField;
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningPingNeedSendCompletedEventHandler(object sender, GetWarningPingNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningPingNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningPingNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningPingChangeStateOKCompletedEventHandler(object sender, GetWarningPingChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningPingChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningPingChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetBackupWorkCompletedEventHandler(object sender, GetBackupWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBackupWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBackupWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessBackupCompletedEventHandler(object sender, ProcessBackupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningBackupNeedSendCompletedEventHandler(object sender, GetWarningBackupNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningBackupNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningBackupNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningBackupChangeStateOKCompletedEventHandler(object sender, GetWarningBackupChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningBackupChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningBackupChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertWarningLogWithErrorContentCompletedEventHandler(object sender, InsertWarningLogWithErrorContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWarningLogWithErrorContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWarningLogWithErrorContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetListOnHolidayCompletedEventHandler(object sender, GetListOnHolidayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListOnHolidayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListOnHolidayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListViolationWarningAccountsCompletedEventHandler(object sender, ListViolationWarningAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListViolationWarningAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListViolationWarningAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ViolationWarningAccountVO[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ViolationWarningAccountVO[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsOverThresholdPercentErrorCompletedEventHandler(object sender, IsOverThresholdPercentErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOverThresholdPercentErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsOverThresholdPercentErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TickViolatedAccountsCompletedEventHandler(object sender, TickViolatedAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TickViolatedAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TickViolatedAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetIPAccessCompletedEventHandler(object sender, GetIPAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIPAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIPAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetObjectViolatedWarningVOCompletedEventHandler(object sender, GetObjectViolatedWarningVOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectViolatedWarningVOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectViolatedWarningVOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ViolatedWarningVO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ViolatedWarningVO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateIDsBWCCompletedEventHandler(object sender, UpdateIDsBWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIDsBWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIDsBWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateNumberSendBWCCompletedEventHandler(object sender, UpdateNumberSendBWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNumberSendBWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNumberSendBWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningParentByWarningIdCompletedEventHandler(object sender, GetWarningParentByWarningIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningParentByWarningIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningParentByWarningIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningWorkByWarningIdCompletedEventHandler(object sender, GetWarningWorkByWarningIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningWorkByWarningIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningWorkByWarningIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessContentWithResultCompletedEventHandler(object sender, ProcessContentWithResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessContentWithResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessContentWithResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessSensorWithResultCompletedEventHandler(object sender, ProcessSensorWithResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessSensorWithResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessSensorWithResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningSensorIsErrorCompletedEventHandler(object sender, GetWarningSensorIsErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningSensorIsErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningSensorIsErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool isError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloCompletedEventHandler(object sender, HelloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLastUpdateSensorCompletedEventHandler(object sender, GetLastUpdateSensorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastUpdateSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastUpdateSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessContentCompletedEventHandler(object sender, ProcessContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessContentSampleCompletedEventHandler(object sender, ProcessContentSampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessContentSampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessContentSampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPingWorkCompletedEventHandler(object sender, GetPingWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPingWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPingWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningMPWorkCompletedEventHandler(object sender, GetWarningMPWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningMPWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningMPWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningMPChangeStateOKCompletedEventHandler(object sender, GetWarningMPChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningMPChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningMPChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningMPNeedSendCompletedEventHandler(object sender, GetWarningMPNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningMPNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningMPNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable dt {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContentWorkCompletedEventHandler(object sender, GetContentWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMaxLastUpdateCompletedEventHandler(object sender, GetMaxLastUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaxLastUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaxLastUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePingOKCompletedEventHandler(object sender, UpdatePingOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePingOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePingOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePingFailCompletedEventHandler(object sender, UpdatePingFailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePingFailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePingFailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningNeedSendCompletedEventHandler(object sender, GetWarningNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningContentNeedSendCompletedEventHandler(object sender, GetWarningContentNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningContentNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningContentNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningParentCompletedEventHandler(object sender, GetWarningParentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserReceiveWarningCompletedEventHandler(object sender, GetUserReceiveWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserReceiveWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserReceiveWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPacketWarningCompletedEventHandler(object sender, GetPacketWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPacketWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPacketWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPacketWarningContentCompletedEventHandler(object sender, GetPacketWarningContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPacketWarningContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPacketWarningContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetParentErrorCompletedEventHandler(object sender, GetParentErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParentErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParentErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateJustSendWarningCompletedEventHandler(object sender, UpdateJustSendWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateJustSendWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateJustSendWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllSuggestWarningCompletedEventHandler(object sender, GetAllSuggestWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSuggestWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSuggestWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningChangeStateOKCompletedEventHandler(object sender, GetWarningChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningContentChangeStateOKCompletedEventHandler(object sender, GetWarningContentChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningContentChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningContentChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateJustChangeOKCompletedEventHandler(object sender, UpdateJustChangeOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateJustChangeOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateJustChangeOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWaringParentNeedSendCompletedEventHandler(object sender, GetWaringParentNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaringParentNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaringParentNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWaringContentParentNeedSendCompletedEventHandler(object sender, GetWaringContentParentNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaringContentParentNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaringContentParentNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWhiteTimeCompletedEventHandler(object sender, GetWhiteTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWhiteTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWhiteTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendWarningWithSMSAndBWCCompletedEventHandler(object sender, SendWarningWithSMSAndBWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWarningWithSMSAndBWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWarningWithSMSAndBWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendWarningCompletedEventHandler(object sender, SendWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTotalContentBySensorIDCompletedEventHandler(object sender, GetTotalContentBySensorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalContentBySensorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalContentBySensorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateLastPingForSensorCompletedEventHandler(object sender, UpdateLastPingForSensorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLastPingForSensorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLastPingForSensorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSensorNotPingCompletedEventHandler(object sender, GetSensorNotPingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSensorNotPingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSensorNotPingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSensorChangeStateOKCompletedEventHandler(object sender, GetSensorChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSensorChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSensorChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SwitchDataWarningStatusCompletedEventHandler(object sender, SwitchDataWarningStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchDataWarningStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwitchDataWarningStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningDataNeedSendCompletedEventHandler(object sender, GetWarningDataNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningDataNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningDataNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningDataChangeStateOKCompletedEventHandler(object sender, GetWarningDataChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningDataChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningDataChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContentPauseTooLongCompletedEventHandler(object sender, GetContentPauseTooLongCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentPauseTooLongCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentPauseTooLongCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePauseStateCompletedEventHandler(object sender, UpdatePauseStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePauseStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePauseStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePauseStateBySMSCompletedEventHandler(object sender, UpdatePauseStateBySMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePauseStateBySMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePauseStateBySMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendInfoByReplySMSCompletedEventHandler(object sender, SendInfoByReplySMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendInfoByReplySMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendInfoByReplySMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateLastPingForToolSendWarningCompletedEventHandler(object sender, UpdateLastPingForToolSendWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLastPingForToolSendWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLastPingForToolSendWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void WarningDataUpdateLastPingByIdCompletedEventHandler(object sender, WarningDataUpdateLastPingByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarningDataUpdateLastPingByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WarningDataUpdateLastPingByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void WarningDataUpdateLastPingCompletedEventHandler(object sender, WarningDataUpdateLastPingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarningDataUpdateLastPingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WarningDataUpdateLastPingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckToolSendWarningActiveCompletedEventHandler(object sender, CheckToolSendWarningActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckToolSendWarningActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckToolSendWarningActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckToolActiveCompletedEventHandler(object sender, CheckToolActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckToolActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckToolActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUpdateWindowWarningBySensorIdCompletedEventHandler(object sender, GetUpdateWindowWarningBySensorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateWindowWarningBySensorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateWindowWarningBySensorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessUpdateWindowWarningCompletedEventHandler(object sender, ProcessUpdateWindowWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessUpdateWindowWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessUpdateWindowWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUpdateWindowNeedSendCompletedEventHandler(object sender, GetUpdateWindowNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateWindowNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateWindowNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUpdateWindowChangeStateOKCompletedEventHandler(object sender, GetUpdateWindowChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateWindowChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateWindowChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDriveBySensorIdCompletedEventHandler(object sender, GetDriveBySensorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriveBySensorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriveBySensorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessDriveWarningCompletedEventHandler(object sender, ProcessDriveWarningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessDriveWarningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessDriveWarningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDriveWarningNeedSendCompletedEventHandler(object sender, GetDriveWarningNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriveWarningNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriveWarningNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDriveWarningChangeStateOKCompletedEventHandler(object sender, GetDriveWarningChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDriveWarningChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDriveWarningChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetResourceWorkCompletedEventHandler(object sender, GetResourceWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetResourceWarningNeedSendCompletedEventHandler(object sender, GetResourceWarningNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceWarningNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceWarningNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetResourceWarningChangeStateOKCompletedEventHandler(object sender, GetResourceWarningChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceWarningChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceWarningChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDatabaseWarningBySensorIdCompletedEventHandler(object sender, GetDatabaseWarningBySensorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabaseWarningBySensorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabaseWarningBySensorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInfoCheckDbByConfigIdCompletedEventHandler(object sender, GetInfoCheckDbByConfigIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoCheckDbByConfigIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoCheckDbByConfigIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSyncDatabaseNeedSendCompletedEventHandler(object sender, GetSyncDatabaseNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncDatabaseNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncDatabaseNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSyncDatabaseChangeStateOKCompletedEventHandler(object sender, GetSyncDatabaseChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncDatabaseChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncDatabaseChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSyncFolderWarningBySensorIdCompletedEventHandler(object sender, GetSyncFolderWarningBySensorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncFolderWarningBySensorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncFolderWarningBySensorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateAnalyzeLogResultCompletedEventHandler(object sender, UpdateAnalyzeLogResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAnalyzeLogResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAnalyzeLogResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSyncFolderNeedSendCompletedEventHandler(object sender, GetSyncFolderNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncFolderNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncFolderNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSyncFolderChangeStateOKCompletedEventHandler(object sender, GetSyncFolderChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSyncFolderChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSyncFolderChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningDDosBySensorIDCompletedEventHandler(object sender, GetWarningDDosBySensorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningDDosBySensorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningDDosBySensorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningDDosNeedSendCompletedEventHandler(object sender, GetWarningDDosNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningDDosNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningDDosNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningDDosChangeStateOKCompletedEventHandler(object sender, GetWarningDDosChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningDDosChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningDDosChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningWebAttackBySensorIDCompletedEventHandler(object sender, GetWarningWebAttackBySensorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningWebAttackBySensorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningWebAttackBySensorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningWebAttackNeedSendCompletedEventHandler(object sender, GetWarningWebAttackNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningWebAttackNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningWebAttackNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningWebAttackChangeStateOKCompletedEventHandler(object sender, GetWarningWebAttackChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningWebAttackChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningWebAttackChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningEventLogBySensorIDCompletedEventHandler(object sender, GetWarningEventLogBySensorIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningEventLogBySensorIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningEventLogBySensorIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningEventLogNeedSendCompletedEventHandler(object sender, GetWarningEventLogNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningEventLogNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningEventLogNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningEventLogChangeStateOKCompletedEventHandler(object sender, GetWarningEventLogChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningEventLogChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningEventLogChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFolderWorkCompletedEventHandler(object sender, GetFolderWorkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessFolderCompletedEventHandler(object sender, ProcessFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningFolderNeedSendCompletedEventHandler(object sender, GetWarningFolderNeedSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningFolderNeedSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningFolderNeedSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetWarningFolderChangeStateOKCompletedEventHandler(object sender, GetWarningFolderChangeStateOKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarningFolderChangeStateOKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarningFolderChangeStateOKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertWarningLogCompletedEventHandler(object sender, InsertWarningLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWarningLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWarningLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetGroupAndUserByLogIdCompletedEventHandler(object sender, GetGroupAndUserByLogIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupAndUserByLogIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupAndUserByLogIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591