//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BWM.com.bkav.bwss {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebserviceBWSSSoap", Namespace="http://tempuri.org/")]
    public partial class WebserviceBWSS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ReportTickOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWarningByIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWarningByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllEmployeeUseComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoAccountByIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSensorOfEmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmployeeUseComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateKQKLMROperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateKQKLMRByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBECByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTickAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadObjectResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAccountPublishKQKLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebserviceBWSS() {
            this.Url = global::BWM.Properties.Settings.Default.BWM_com_bkav_bwss_WebserviceBWSS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ReportTickCompletedEventHandler ReportTickCompleted;
        
        /// <remarks/>
        public event InsertWarningByIPCompletedEventHandler InsertWarningByIPCompleted;
        
        /// <remarks/>
        public event InsertWarningByAccountCompletedEventHandler InsertWarningByAccountCompleted;
        
        /// <remarks/>
        public event GetAllEmployeeUseComputerCompletedEventHandler GetAllEmployeeUseComputerCompleted;
        
        /// <remarks/>
        public event GetInfoAccountByIPCompletedEventHandler GetInfoAccountByIPCompleted;
        
        /// <remarks/>
        public event GetSensorOfEmployeeCompletedEventHandler GetSensorOfEmployeeCompleted;
        
        /// <remarks/>
        public event CheckEmployeeUseComputerCompletedEventHandler CheckEmployeeUseComputerCompleted;
        
        /// <remarks/>
        public event CreateKQKLMRCompletedEventHandler CreateKQKLMRCompleted;
        
        /// <remarks/>
        public event CreateKQKLMRByAccountCompletedEventHandler CreateKQKLMRByAccountCompleted;
        
        /// <remarks/>
        public event CreateBECByAccountCompletedEventHandler CreateBECByAccountCompleted;
        
        /// <remarks/>
        public event CreateTickAccountCompletedEventHandler CreateTickAccountCompleted;
        
        /// <remarks/>
        public event LoadObjectResultCompletedEventHandler LoadObjectResultCompleted;
        
        /// <remarks/>
        public event CheckAccountPublishKQKLCompletedEventHandler CheckAccountPublishKQKLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportTick", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportTick(int month, int year) {
            object[] results = this.Invoke("ReportTick", new object[] {
                        month,
                        year});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReportTickAsync(int month, int year) {
            this.ReportTickAsync(month, year, null);
        }
        
        /// <remarks/>
        public void ReportTickAsync(int month, int year, object userState) {
            if ((this.ReportTickOperationCompleted == null)) {
                this.ReportTickOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportTickOperationCompleted);
            }
            this.InvokeAsync("ReportTick", new object[] {
                        month,
                        year}, this.ReportTickOperationCompleted, userState);
        }
        
        private void OnReportTickOperationCompleted(object arg) {
            if ((this.ReportTickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportTickCompleted(this, new ReportTickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertWarningByIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertWarningByIP(string ip, string category, string contentViolate, string system, System.DateTime lastTimeExplanation) {
            object[] results = this.Invoke("InsertWarningByIP", new object[] {
                        ip,
                        category,
                        contentViolate,
                        system,
                        lastTimeExplanation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWarningByIPAsync(string ip, string category, string contentViolate, string system, System.DateTime lastTimeExplanation) {
            this.InsertWarningByIPAsync(ip, category, contentViolate, system, lastTimeExplanation, null);
        }
        
        /// <remarks/>
        public void InsertWarningByIPAsync(string ip, string category, string contentViolate, string system, System.DateTime lastTimeExplanation, object userState) {
            if ((this.InsertWarningByIPOperationCompleted == null)) {
                this.InsertWarningByIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWarningByIPOperationCompleted);
            }
            this.InvokeAsync("InsertWarningByIP", new object[] {
                        ip,
                        category,
                        contentViolate,
                        system,
                        lastTimeExplanation}, this.InsertWarningByIPOperationCompleted, userState);
        }
        
        private void OnInsertWarningByIPOperationCompleted(object arg) {
            if ((this.InsertWarningByIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWarningByIPCompleted(this, new InsertWarningByIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertWarningByAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertWarningByAccount(string account, string category, string contentViolate, string system, System.DateTime lastTimeExplanation) {
            object[] results = this.Invoke("InsertWarningByAccount", new object[] {
                        account,
                        category,
                        contentViolate,
                        system,
                        lastTimeExplanation});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertWarningByAccountAsync(string account, string category, string contentViolate, string system, System.DateTime lastTimeExplanation) {
            this.InsertWarningByAccountAsync(account, category, contentViolate, system, lastTimeExplanation, null);
        }
        
        /// <remarks/>
        public void InsertWarningByAccountAsync(string account, string category, string contentViolate, string system, System.DateTime lastTimeExplanation, object userState) {
            if ((this.InsertWarningByAccountOperationCompleted == null)) {
                this.InsertWarningByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWarningByAccountOperationCompleted);
            }
            this.InvokeAsync("InsertWarningByAccount", new object[] {
                        account,
                        category,
                        contentViolate,
                        system,
                        lastTimeExplanation}, this.InsertWarningByAccountOperationCompleted, userState);
        }
        
        private void OnInsertWarningByAccountOperationCompleted(object arg) {
            if ((this.InsertWarningByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWarningByAccountCompleted(this, new InsertWarningByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllEmployeeUseComputer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllEmployeeUseComputer(System.DateTime lastupdate) {
            object[] results = this.Invoke("GetAllEmployeeUseComputer", new object[] {
                        lastupdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllEmployeeUseComputerAsync(System.DateTime lastupdate) {
            this.GetAllEmployeeUseComputerAsync(lastupdate, null);
        }
        
        /// <remarks/>
        public void GetAllEmployeeUseComputerAsync(System.DateTime lastupdate, object userState) {
            if ((this.GetAllEmployeeUseComputerOperationCompleted == null)) {
                this.GetAllEmployeeUseComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeeUseComputerOperationCompleted);
            }
            this.InvokeAsync("GetAllEmployeeUseComputer", new object[] {
                        lastupdate}, this.GetAllEmployeeUseComputerOperationCompleted, userState);
        }
        
        private void OnGetAllEmployeeUseComputerOperationCompleted(object arg) {
            if ((this.GetAllEmployeeUseComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllEmployeeUseComputerCompleted(this, new GetAllEmployeeUseComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoAccountByIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInfoAccountByIP(string ip) {
            object[] results = this.Invoke("GetInfoAccountByIP", new object[] {
                        ip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoAccountByIPAsync(string ip) {
            this.GetInfoAccountByIPAsync(ip, null);
        }
        
        /// <remarks/>
        public void GetInfoAccountByIPAsync(string ip, object userState) {
            if ((this.GetInfoAccountByIPOperationCompleted == null)) {
                this.GetInfoAccountByIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoAccountByIPOperationCompleted);
            }
            this.InvokeAsync("GetInfoAccountByIP", new object[] {
                        ip}, this.GetInfoAccountByIPOperationCompleted, userState);
        }
        
        private void OnGetInfoAccountByIPOperationCompleted(object arg) {
            if ((this.GetInfoAccountByIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoAccountByIPCompleted(this, new GetInfoAccountByIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSensorOfEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSensorOfEmployee(string account) {
            object[] results = this.Invoke("GetSensorOfEmployee", new object[] {
                        account});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSensorOfEmployeeAsync(string account) {
            this.GetSensorOfEmployeeAsync(account, null);
        }
        
        /// <remarks/>
        public void GetSensorOfEmployeeAsync(string account, object userState) {
            if ((this.GetSensorOfEmployeeOperationCompleted == null)) {
                this.GetSensorOfEmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSensorOfEmployeeOperationCompleted);
            }
            this.InvokeAsync("GetSensorOfEmployee", new object[] {
                        account}, this.GetSensorOfEmployeeOperationCompleted, userState);
        }
        
        private void OnGetSensorOfEmployeeOperationCompleted(object arg) {
            if ((this.GetSensorOfEmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSensorOfEmployeeCompleted(this, new GetSensorOfEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmployeeUseComputer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckEmployeeUseComputer(string account) {
            object[] results = this.Invoke("CheckEmployeeUseComputer", new object[] {
                        account});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmployeeUseComputerAsync(string account) {
            this.CheckEmployeeUseComputerAsync(account, null);
        }
        
        /// <remarks/>
        public void CheckEmployeeUseComputerAsync(string account, object userState) {
            if ((this.CheckEmployeeUseComputerOperationCompleted == null)) {
                this.CheckEmployeeUseComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmployeeUseComputerOperationCompleted);
            }
            this.InvokeAsync("CheckEmployeeUseComputer", new object[] {
                        account}, this.CheckEmployeeUseComputerOperationCompleted, userState);
        }
        
        private void OnCheckEmployeeUseComputerOperationCompleted(object arg) {
            if ((this.CheckEmployeeUseComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmployeeUseComputerCompleted(this, new CheckEmployeeUseComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateKQKLMR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateKQKLMR(string system, string manager, string workName, string keywordFinish, string result, string tester, string start, string deadline, string categoryReport) {
            object[] results = this.Invoke("CreateKQKLMR", new object[] {
                        system,
                        manager,
                        workName,
                        keywordFinish,
                        result,
                        tester,
                        start,
                        deadline,
                        categoryReport});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateKQKLMRAsync(string system, string manager, string workName, string keywordFinish, string result, string tester, string start, string deadline, string categoryReport) {
            this.CreateKQKLMRAsync(system, manager, workName, keywordFinish, result, tester, start, deadline, categoryReport, null);
        }
        
        /// <remarks/>
        public void CreateKQKLMRAsync(string system, string manager, string workName, string keywordFinish, string result, string tester, string start, string deadline, string categoryReport, object userState) {
            if ((this.CreateKQKLMROperationCompleted == null)) {
                this.CreateKQKLMROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateKQKLMROperationCompleted);
            }
            this.InvokeAsync("CreateKQKLMR", new object[] {
                        system,
                        manager,
                        workName,
                        keywordFinish,
                        result,
                        tester,
                        start,
                        deadline,
                        categoryReport}, this.CreateKQKLMROperationCompleted, userState);
        }
        
        private void OnCreateKQKLMROperationCompleted(object arg) {
            if ((this.CreateKQKLMRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateKQKLMRCompleted(this, new CreateKQKLMRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateKQKLMRByAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectResult CreateKQKLMRByAccount(KQKLMR sytemKQKLMR) {
            object[] results = this.Invoke("CreateKQKLMRByAccount", new object[] {
                        sytemKQKLMR});
            return ((ObjectResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateKQKLMRByAccountAsync(KQKLMR sytemKQKLMR) {
            this.CreateKQKLMRByAccountAsync(sytemKQKLMR, null);
        }
        
        /// <remarks/>
        public void CreateKQKLMRByAccountAsync(KQKLMR sytemKQKLMR, object userState) {
            if ((this.CreateKQKLMRByAccountOperationCompleted == null)) {
                this.CreateKQKLMRByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateKQKLMRByAccountOperationCompleted);
            }
            this.InvokeAsync("CreateKQKLMRByAccount", new object[] {
                        sytemKQKLMR}, this.CreateKQKLMRByAccountOperationCompleted, userState);
        }
        
        private void OnCreateKQKLMRByAccountOperationCompleted(object arg) {
            if ((this.CreateKQKLMRByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateKQKLMRByAccountCompleted(this, new CreateKQKLMRByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateBECByAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectResult CreateBECByAccount(BEC systemBwec) {
            object[] results = this.Invoke("CreateBECByAccount", new object[] {
                        systemBwec});
            return ((ObjectResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBECByAccountAsync(BEC systemBwec) {
            this.CreateBECByAccountAsync(systemBwec, null);
        }
        
        /// <remarks/>
        public void CreateBECByAccountAsync(BEC systemBwec, object userState) {
            if ((this.CreateBECByAccountOperationCompleted == null)) {
                this.CreateBECByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBECByAccountOperationCompleted);
            }
            this.InvokeAsync("CreateBECByAccount", new object[] {
                        systemBwec}, this.CreateBECByAccountOperationCompleted, userState);
        }
        
        private void OnCreateBECByAccountOperationCompleted(object arg) {
            if ((this.CreateBECByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBECByAccountCompleted(this, new CreateBECByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTickAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ObjectResult CreateTickAccount(Ticks systemTick) {
            object[] results = this.Invoke("CreateTickAccount", new object[] {
                        systemTick});
            return ((ObjectResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTickAccountAsync(Ticks systemTick) {
            this.CreateTickAccountAsync(systemTick, null);
        }
        
        /// <remarks/>
        public void CreateTickAccountAsync(Ticks systemTick, object userState) {
            if ((this.CreateTickAccountOperationCompleted == null)) {
                this.CreateTickAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTickAccountOperationCompleted);
            }
            this.InvokeAsync("CreateTickAccount", new object[] {
                        systemTick}, this.CreateTickAccountOperationCompleted, userState);
        }
        
        private void OnCreateTickAccountOperationCompleted(object arg) {
            if ((this.CreateTickAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTickAccountCompleted(this, new CreateTickAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadObjectResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable LoadObjectResult(System.DateTime starDateTime, System.DateTime enDateTime) {
            object[] results = this.Invoke("LoadObjectResult", new object[] {
                        starDateTime,
                        enDateTime});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void LoadObjectResultAsync(System.DateTime starDateTime, System.DateTime enDateTime) {
            this.LoadObjectResultAsync(starDateTime, enDateTime, null);
        }
        
        /// <remarks/>
        public void LoadObjectResultAsync(System.DateTime starDateTime, System.DateTime enDateTime, object userState) {
            if ((this.LoadObjectResultOperationCompleted == null)) {
                this.LoadObjectResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadObjectResultOperationCompleted);
            }
            this.InvokeAsync("LoadObjectResult", new object[] {
                        starDateTime,
                        enDateTime}, this.LoadObjectResultOperationCompleted, userState);
        }
        
        private void OnLoadObjectResultOperationCompleted(object arg) {
            if ((this.LoadObjectResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadObjectResultCompleted(this, new LoadObjectResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAccountPublishKQKL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAccountPublishKQKL(string account, string archiveId, out int result) {
            object[] results = this.Invoke("CheckAccountPublishKQKL", new object[] {
                        account,
                        archiveId});
            result = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAccountPublishKQKLAsync(string account, string archiveId) {
            this.CheckAccountPublishKQKLAsync(account, archiveId, null);
        }
        
        /// <remarks/>
        public void CheckAccountPublishKQKLAsync(string account, string archiveId, object userState) {
            if ((this.CheckAccountPublishKQKLOperationCompleted == null)) {
                this.CheckAccountPublishKQKLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAccountPublishKQKLOperationCompleted);
            }
            this.InvokeAsync("CheckAccountPublishKQKL", new object[] {
                        account,
                        archiveId}, this.CheckAccountPublishKQKLOperationCompleted, userState);
        }
        
        private void OnCheckAccountPublishKQKLOperationCompleted(object arg) {
            if ((this.CheckAccountPublishKQKLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAccountPublishKQKLCompleted(this, new CheckAccountPublishKQKLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class KQKLMR {
        
        private string systemField;
        
        private string managerField;
        
        private string workNameField;
        
        private string keywordFinishField;
        
        private string resultField;
        
        private string testerField;
        
        private string startDateField;
        
        private string deadlineField;
        
        private string typeField;
        
        private string tokenSystemField;
        
        /// <remarks/>
        public string System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
        
        /// <remarks/>
        public string Manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
            }
        }
        
        /// <remarks/>
        public string WorkName {
            get {
                return this.workNameField;
            }
            set {
                this.workNameField = value;
            }
        }
        
        /// <remarks/>
        public string KeywordFinish {
            get {
                return this.keywordFinishField;
            }
            set {
                this.keywordFinishField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Tester {
            get {
                return this.testerField;
            }
            set {
                this.testerField = value;
            }
        }
        
        /// <remarks/>
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public string Deadline {
            get {
                return this.deadlineField;
            }
            set {
                this.deadlineField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string TokenSystem {
            get {
                return this.tokenSystemField;
            }
            set {
                this.tokenSystemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Ticks {
        
        private string accountField;
        
        private string regulationNameField;
        
        private string violateContentField;
        
        private string reasonField;
        
        private System.DateTime timeTickField;
        
        private double tickQuantityField;
        
        private int moneyField;
        
        private string systemField;
        
        private string tokenSystemField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string RegulationName {
            get {
                return this.regulationNameField;
            }
            set {
                this.regulationNameField = value;
            }
        }
        
        /// <remarks/>
        public string ViolateContent {
            get {
                return this.violateContentField;
            }
            set {
                this.violateContentField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeTick {
            get {
                return this.timeTickField;
            }
            set {
                this.timeTickField = value;
            }
        }
        
        /// <remarks/>
        public double TickQuantity {
            get {
                return this.tickQuantityField;
            }
            set {
                this.tickQuantityField = value;
            }
        }
        
        /// <remarks/>
        public int Money {
            get {
                return this.moneyField;
            }
            set {
                this.moneyField = value;
            }
        }
        
        /// <remarks/>
        public string System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
        
        /// <remarks/>
        public string TokenSystem {
            get {
                return this.tokenSystemField;
            }
            set {
                this.tokenSystemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BEC {
        
        private string accountField;
        
        private string categoryField;
        
        private string contentViolateField;
        
        private string contentViolateDetailField;
        
        private string systemField;
        
        private System.DateTime lastTimeField;
        
        private string tokenSystemField;
        
        private string infoDeadlineField;
        
        private string infoOverdueField;
        
        private string reasonField;
        
        private string systemSourceField;
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string ContentViolate {
            get {
                return this.contentViolateField;
            }
            set {
                this.contentViolateField = value;
            }
        }
        
        /// <remarks/>
        public string ContentViolateDetail {
            get {
                return this.contentViolateDetailField;
            }
            set {
                this.contentViolateDetailField = value;
            }
        }
        
        /// <remarks/>
        public string System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastTime {
            get {
                return this.lastTimeField;
            }
            set {
                this.lastTimeField = value;
            }
        }
        
        /// <remarks/>
        public string TokenSystem {
            get {
                return this.tokenSystemField;
            }
            set {
                this.tokenSystemField = value;
            }
        }
        
        /// <remarks/>
        public string InfoDeadline {
            get {
                return this.infoDeadlineField;
            }
            set {
                this.infoDeadlineField = value;
            }
        }
        
        /// <remarks/>
        public string InfoOverdue {
            get {
                return this.infoOverdueField;
            }
            set {
                this.infoOverdueField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string SystemSource {
            get {
                return this.systemSourceField;
            }
            set {
                this.systemSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ObjectResult {
        
        private string infoMessageField;
        
        private string errorMessageField;
        
        private object resultField;
        
        /// <remarks/>
        public string InfoMessage {
            get {
                return this.infoMessageField;
            }
            set {
                this.infoMessageField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public object Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ReportTickCompletedEventHandler(object sender, ReportTickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportTickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportTickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertWarningByIPCompletedEventHandler(object sender, InsertWarningByIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWarningByIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWarningByIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertWarningByAccountCompletedEventHandler(object sender, InsertWarningByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertWarningByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertWarningByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllEmployeeUseComputerCompletedEventHandler(object sender, GetAllEmployeeUseComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllEmployeeUseComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllEmployeeUseComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInfoAccountByIPCompletedEventHandler(object sender, GetInfoAccountByIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoAccountByIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoAccountByIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSensorOfEmployeeCompletedEventHandler(object sender, GetSensorOfEmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSensorOfEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSensorOfEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckEmployeeUseComputerCompletedEventHandler(object sender, CheckEmployeeUseComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmployeeUseComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmployeeUseComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateKQKLMRCompletedEventHandler(object sender, CreateKQKLMRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateKQKLMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateKQKLMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateKQKLMRByAccountCompletedEventHandler(object sender, CreateKQKLMRByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateKQKLMRByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateKQKLMRByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateBECByAccountCompletedEventHandler(object sender, CreateBECByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBECByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBECByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateTickAccountCompletedEventHandler(object sender, CreateTickAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTickAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTickAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ObjectResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ObjectResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadObjectResultCompletedEventHandler(object sender, LoadObjectResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadObjectResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadObjectResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckAccountPublishKQKLCompletedEventHandler(object sender, CheckAccountPublishKQKLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAccountPublishKQKLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAccountPublishKQKLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591